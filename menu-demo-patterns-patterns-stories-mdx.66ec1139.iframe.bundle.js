"use strict";(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[991],{"./packages/menu/demo/~patterns/patterns.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>patterns_stories,nestedFocusControlled:()=>nestedFocusControlled,nestedFocusUncontrolled:()=>nestedFocusUncontrolled});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),external_STORYBOOK_MODULE_CLIENT_API_=__webpack_require__("@storybook/client-api"),classnames=(__webpack_require__("./node_modules/@storybook/react/dist/index.mjs"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),useMenu=__webpack_require__("./packages/menu/src/useMenu.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const NestedStory=_ref=>{let{rtl,onChange,items}=_ref;const triggerRef=(0,react.useRef)(null),menuRef=(0,react.useRef)(null),{focusedValue,isExpanded,getTriggerProps,getMenuProps,getItemProps,getSeparatorProps}=(0,useMenu.H)({items,triggerRef,menuRef,onChange,rtl});return(0,jsx_runtime.jsxs)("div",{className:"relative",dir:rtl?"rtl":"ltr",children:[(0,jsx_runtime.jsx)("button",{...getTriggerProps(),children:"Fruits"}),(0,jsx_runtime.jsx)("ul",{className:classnames_default()("border border-grey-400 border-solid w-32 absolute",{invisible:!isExpanded}),...getMenuProps(),children:items.map((item=>{if("separator"in item)return(0,jsx_runtime.jsx)("li",{className:"my-1 border-0 border-b border-solid border-grey-200",...getSeparatorProps()},item.value);if("value"in item){const{value,isNext,isPrevious}=item;return(0,react.createElement)("li",{...getItemProps({item}),className:classnames_default()("flex cursor-default",{"bg-blue-100":focusedValue===value}),key:value},(0,jsx_runtime.jsx)("span",{className:"inline-flex justify-center items-center w-4",children:isPrevious&&(0,jsx_runtime.jsx)("span",{"aria-hidden":"true",children:"<"})}),value,(0,jsx_runtime.jsx)("span",{className:"ms-auto inline-flex justify-center items-center w-4",children:isNext&&(0,jsx_runtime.jsx)("span",{"aria-hidden":"true",children:">"})}),isPrevious&&(0,jsx_runtime.jsx)("span",{className:"sr-only",children:"Back to main menu"}),isNext&&(0,jsx_runtime.jsx)("span",{className:"sr-only",children:"Go to submenu"}))}return null}))})]})};NestedStory.displayName="NestedStory";const BASE_ITEMS=[{value:"Orange"},{value:"Berry",isNext:!0},{value:"Apple"}],NESTED_ITEMS=[{value:"Fruits",isPrevious:!0},{value:"separator",separator:!0},{value:"Strawberry"},{value:"Loganberry"},{value:"Boysenberry"}];function _createMdxContent(props){const _components=Object.assign({h1:"h1",h2:"h2",p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Packages/Menu/[patterns]"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"patterns",children:"Patterns"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"nested-focus-uncontrolled",children:"Nested Focus Uncontrolled"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Demonstrate nested menu with uncontrolled focus."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Nested focus uncontrolled",args:{rtl:!1,items:BASE_ITEMS},children:args=>{const[_,updateArgs,resetArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)(),onChange=(0,react.useCallback)((({type,isExpanded})=>{const isNext=type.includes("next"),isPrev=type.includes("previous");isNext||isPrev?updateArgs({items:isNext?NESTED_ITEMS:BASE_ITEMS}):!1===isExpanded&&resetArgs(["items"])}),[]);return(0,jsx_runtime.jsx)(NestedStory,{...args,onChange})}})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"nested-focus-controlled",children:"Nested Focus Controlled"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Demonstrate nested menu with controlled focus."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Nested focus controlled",argTypes:{focusedValue:{control:{type:"text"}}},args:{rtl:!1,items:BASE_ITEMS,focusedValue:"Orange"},children:args=>{const updateArgs=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)()[1],onChange=(0,react.useCallback)((({type,focusedValue,isExpanded})=>{const isNext=type.includes("next"),isPrev=type.includes("previous"),_focusedValue=focusedValue||args.focusedValue;updateArgs(isNext||isPrev?{items:isNext?NESTED_ITEMS:BASE_ITEMS,focusedValue:isNext?"Fruits":"Berry"}:!1===isExpanded?{items:BASE_ITEMS,focusedValue:_focusedValue}:{focusedValue:_focusedValue})}),[args.focusedValue]);return(0,jsx_runtime.jsx)(NestedStory,{...args,onChange})}})})]})}const nestedFocusUncontrolled=args=>{const[_,updateArgs,resetArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)(),onChange=(0,react.useCallback)((({type,isExpanded})=>{const isNext=type.includes("next"),isPrev=type.includes("previous");isNext||isPrev?updateArgs({items:isNext?NESTED_ITEMS:BASE_ITEMS}):!1===isExpanded&&resetArgs(["items"])}),[]);return(0,jsx_runtime.jsx)(NestedStory,{...args,onChange})};nestedFocusUncontrolled.storyName="Nested focus uncontrolled",nestedFocusUncontrolled.args={rtl:!1,items:BASE_ITEMS},nestedFocusUncontrolled.parameters={storySource:{source:'args => {\n  const [_, updateArgs, resetArgs] = useArgs();\n  const onChange = useCallback(({\n    type,\n    isExpanded\n  }) => {\n    const isNext = type.includes("next");\n    const isPrev = type.includes("previous");\n    if (isNext || isPrev) {\n      updateArgs({\n        items: isNext ? NESTED_ITEMS : BASE_ITEMS\n      });\n    } else if (isExpanded === false) {\n      resetArgs(["items"]);\n    }\n  }, []);\n  return <NestedStory {...args} onChange={onChange} />;\n}'}};const nestedFocusControlled=args=>{const updateArgs=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)()[1],onChange=(0,react.useCallback)((({type,focusedValue,isExpanded})=>{const isNext=type.includes("next"),isPrev=type.includes("previous"),_focusedValue=focusedValue||args.focusedValue;updateArgs(isNext||isPrev?{items:isNext?NESTED_ITEMS:BASE_ITEMS,focusedValue:isNext?"Fruits":"Berry"}:!1===isExpanded?{items:BASE_ITEMS,focusedValue:_focusedValue}:{focusedValue:_focusedValue})}),[args.focusedValue]);return(0,jsx_runtime.jsx)(NestedStory,{...args,onChange})};nestedFocusControlled.storyName="Nested focus controlled",nestedFocusControlled.argTypes={focusedValue:{control:{type:"text"}}},nestedFocusControlled.args={rtl:!1,items:BASE_ITEMS,focusedValue:"Orange"},nestedFocusControlled.parameters={storySource:{source:'args => {\n  const updateArgs = useArgs()[1];\n  const onChange = useCallback(({\n    type,\n    focusedValue,\n    isExpanded\n  }) => {\n    const isNext = type.includes("next");\n    const isPrev = type.includes("previous");\n    const _focusedValue = focusedValue || args.focusedValue;\n    if (isNext || isPrev) {\n      updateArgs({\n        items: isNext ? NESTED_ITEMS : BASE_ITEMS,\n        focusedValue: isNext ? "Fruits" : "Berry"\n      });\n    } else if (isExpanded === false) {\n      updateArgs({\n        items: BASE_ITEMS,\n        focusedValue: _focusedValue\n      });\n    } else {\n      updateArgs({\n        focusedValue: _focusedValue\n      });\n    }\n  }, [args.focusedValue]);\n  return <NestedStory {...args} onChange={onChange} />;\n}'}};const componentMeta={title:"Packages/Menu/[patterns]",tags:["stories-mdx"],includeStories:["nestedFocusUncontrolled","nestedFocusControlled"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const patterns_stories=componentMeta,__namedExportsOrder=["nestedFocusUncontrolled","nestedFocusControlled"]}}]);