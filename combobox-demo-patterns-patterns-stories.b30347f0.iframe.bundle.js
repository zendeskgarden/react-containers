"use strict";(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[67],{"./packages/combobox/demo/~patterns/patterns.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Ime:()=>Ime,__namedExportsOrder:()=>__namedExportsOrder,default:()=>patterns_stories});var react=__webpack_require__("./node_modules/react/index.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),classnames=(__webpack_require__("./node_modules/@storybook/react/dist/index.mjs"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),useCombobox=__webpack_require__("./packages/combobox/src/useCombobox.ts");const OPTIONS=[{value:"vegetable-01",label:"Ásparagus",selected:!0},{value:"vegetable-02",label:"Broccoli"},{value:"vegetable-03",label:"Brussel sprouts"},{value:"vegetable-04",label:"Cauliflower"},{value:"vegetable-07",label:"Kale"}],IMEStory=()=>{const triggerRef=(0,react.createRef)(),inputRef=(0,react.createRef)(),listboxRef=(0,react.createRef)(),[inputValue,setInputValue]=(0,react.useState)(OPTIONS.find((option=>option.selected))?.label),{getLabelProps,getTriggerProps,getInputProps,getListboxProps,getOptionProps,activeValue,isExpanded,selection}=(0,useCombobox.K)({triggerRef,inputRef,listboxRef,options:OPTIONS,inputValue,onChange:_ref=>{let{inputValue:_inputValue}=_ref;void 0!==_inputValue&&setInputValue(_inputValue)}});return react.createElement("div",{className:"relative"},react.createElement("label",getLabelProps(),"Test IME input"),react.createElement("div",(0,esm_extends.Z)({className:classnames_default()("border","border-solid","p-1")},getTriggerProps()),react.createElement("input",(0,esm_extends.Z)({className:classnames_default()("border-none","background-transparent")},getInputProps())),react.createElement("ul",(0,esm_extends.Z)({className:classnames_default()("mt-1","border","border-solid","absolute","w-full",{invisible:!isExpanded}),style:{left:0,top:"100%"}},getListboxProps({"aria-label":"Options"})),OPTIONS.map(((option,index)=>react.createElement("li",(0,esm_extends.Z)({key:index,className:classnames_default()({"bg-blue-100":option.value===activeValue})},getOptionProps({option})),!!selection&&!Array.isArray(selection)&&selection.value===option.value&&"✓ ",option.label))))))};IMEStory.__docgenInfo={description:"",methods:[],displayName:"IMEStory"};const patterns_stories={title:"Packages/Combobox/[patterns]"},Ime={render:args=>react.createElement(IMEStory,args),name:"IME"};Ime.parameters={...Ime.parameters,docs:{...Ime.parameters?.docs,source:{originalSource:"{\n  render: args => <IMEStory {...args} />,\n  name: 'IME'\n}",...Ime.parameters?.docs?.source}}};const __namedExportsOrder=["Ime"]}}]);