"use strict";(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[212],{"./packages/menu/demo/menu.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{controlled:()=>controlled,default:()=>menu_stories,uncontrolled:()=>uncontrolled});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),external_STORYBOOK_MODULE_CLIENT_API_=__webpack_require__("@storybook/client-api"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),useMenu=__webpack_require__("./packages/menu/src/useMenu.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const MenuContainer=props=>{const{children,render=children,...options}=props;return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:render((0,useMenu.H)(options))})};MenuContainer.propTypes={children:prop_types_default().func,render:prop_types_default().func,items:prop_types_default().arrayOf(prop_types_default().any).isRequired,triggerRef:prop_types_default().any.isRequired,menuRef:prop_types_default().any.isRequired,idPrefix:prop_types_default().string,environment:prop_types_default().any,onChange:prop_types_default().func,isExpanded:prop_types_default().bool,defaultExpanded:prop_types_default().bool,selectedItems:prop_types_default().arrayOf(prop_types_default().any),focusedValue:prop_types_default().oneOfType([prop_types_default().string]),defaultFocusedValue:prop_types_default().oneOfType([prop_types_default().string])};try{MenuContainer.displayName="MenuContainer",MenuContainer.__docgenInfo={description:"",displayName:"MenuContainer",props:{render:{defaultValue:null,description:"Provides menu render prop functions\n@param options.getTriggerProps Trigger props getter\n@param options.getMenuProps Menu props getter\n@param options.getItemProps Menu item props getter\n@param options.getSeparatorProps Separator item props getter\n@param options.isExpanded Current menu expansion\n@param options.selection Current selection\n@param options.focusedValue Current focused value",name:"render",required:!1,type:{name:'((options: { getTriggerProps: (props?: (Omit<ButtonHTMLAttributes<HTMLButtonElement>, "type" | "role"> & { role?: "button" | null; type?: "button" | ... 1 more ...; }) | undefined) => ButtonHTMLAttributes<...>; ... 5 more ...; focusedValue?: string | ... 1 more ... | undefined; }) => ReactNod...'}},children:{defaultValue:null,description:"@ignore",name:"children",required:!1,type:{name:"(((options: IUseMenuReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},items:{defaultValue:null,description:"Provides an ordered list of menu items\n@param item.value Unique item value\n@param item.label Optional human-readable text value (defaults to `item.value`)\n@param item.name A shared name corresponding to an item radio group\n@param item.disabled Indicates the item is not interactive\n@param item.selected Sets initial selection for the option\n@param item.isNext - Indicates the item transitions to a nested menu\n@param item.isPrevious - Indicates the item will transition back from a nested menu\n@param item.separator Indicates the item is a placeholder for a separator\n@param item.items Groups a list of items",name:"items",required:!0,type:{name:"MenuItem[]"}},triggerRef:{defaultValue:null,description:"Provides ref access to the underlying trigger element",name:"triggerRef",required:!0,type:{name:"RefObject<any>"}},menuRef:{defaultValue:null,description:"Provides ref access to the underlying menu element",name:"menuRef",required:!0,type:{name:"RefObject<any>"}},rtl:{defaultValue:null,description:"Determines right-to-left layout",name:"rtl",required:!1,type:{name:"boolean"}},idPrefix:{defaultValue:null,description:"Prefixes IDs for the menu",name:"idPrefix",required:!1,type:{name:"string"}},isExpanded:{defaultValue:null,description:"Sets the expansion in a controlled menu",name:"isExpanded",required:!1,type:{name:"boolean"}},defaultExpanded:{defaultValue:null,description:"Determines menu expansion on menu initialization",name:"defaultExpanded",required:!1,type:{name:"boolean"}},focusedValue:{defaultValue:null,description:"Sets the focused value in a controlled menu",name:"focusedValue",required:!1,type:{name:"string | null"}},defaultFocusedValue:{defaultValue:null,description:"Determines focused value on menu initialization",name:"defaultFocusedValue",required:!1,type:{name:"string"}},selectedItems:{defaultValue:null,description:"Sets the selected values in a controlled menu",name:"selectedItems",required:!1,type:{name:"ISelectedItem[]"}},onChange:{defaultValue:null,description:"Handles menu state changes\n@param changes.type The event type that triggered the change\n@param changes.isExpanded The updated menu expansion\n@param changes.selectedItems The updated selection values\n@param changes.focusedValue The updated focused value",name:"onChange",required:!1,type:{name:"((changes: { type: string; isExpanded?: boolean; selectedItems?: ISelectedItem[]; focusedValue?: string | null | undefined; }) => void) | undefined"}},environment:{defaultValue:null,description:"Sets the environment where the menu is rendered",name:"environment",required:!1,type:{name:"Window"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/menu/src/MenuContainer.tsx#MenuContainer"]={docgenInfo:MenuContainer.__docgenInfo,name:"MenuContainer",path:"packages/menu/src/MenuContainer.tsx#MenuContainer"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./node_modules/@storybook/react/dist/index.mjs");var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);const Item=_ref=>{let{item,getItemProps,focusedValue,isSelected}=_ref;return(0,jsx_runtime.jsxs)("li",{className:classnames_default()({"bg-blue-100":!item.disabled&&focusedValue===item.value,"text-grey-400":item.disabled,"cursor-pointer":!item.disabled,"cursor-default":item.disabled}),...getItemProps({item}),children:[(0,jsx_runtime.jsxs)("span",{className:"inline-flex justify-center items-center w-4",children:["radio"===item?.type&&isSelected&&"•","checkbox"===item?.type&&isSelected&&"✓"]}),item.label||item.value]})};Item.displayName="Item";const Component=_ref2=>{let{items,selection,focusedValue,isExpanded,getTriggerProps,getMenuProps,getItemProps,getItemGroupProps,getSeparatorProps}=_ref2;const selectedValues=selection.map((item=>item.value));return(0,jsx_runtime.jsxs)("div",{className:"relative",children:[(0,jsx_runtime.jsx)("button",{...getTriggerProps(),children:"Produce"}),(0,jsx_runtime.jsx)("ul",{className:classnames_default()("border border-grey-400 border-solid w-32 absolute",{invisible:!isExpanded}),...getMenuProps(),children:items.map((item=>"items"in item?(0,jsx_runtime.jsxs)("li",{role:"none",children:[(0,jsx_runtime.jsx)("b",{"aria-hidden":"true",className:"block mt-1 ms-1",children:item.label}),(0,jsx_runtime.jsx)("hr",{"aria-hidden":"true",className:"my-1 border-grey-200",...getSeparatorProps()}),(0,jsx_runtime.jsx)("ul",{...getItemGroupProps({"aria-label":item.label}),children:item.items.map((groupItem=>(0,jsx_runtime.jsx)(Item,{item:{...groupItem},getItemProps,focusedValue,isSelected:selectedValues.includes(groupItem.value)},groupItem.value)))})]},item.label):"separator"in item?(0,jsx_runtime.jsx)("li",{className:"my-1 border-0 border-b border-solid border-grey-200",...getSeparatorProps()},item.value):(0,jsx_runtime.jsx)(Item,{item,focusedValue,getItemProps},item.value)))})]})};Component.displayName="Component",Component.displayName="Component";const Container=props=>(0,jsx_runtime.jsx)(MenuContainer,{...props,children:containerProps=>(0,jsx_runtime.jsx)(Component,{...props,...containerProps})});Container.displayName="Container";const Hook=props=>{const hookProps=(0,useMenu.H)(props);return(0,jsx_runtime.jsx)(Component,{...props,...hookProps})};Hook.displayName="Hook";const MenuStory=_ref3=>{let{as,...props}=_ref3;const triggerRef=(0,react.useRef)(null),menuRef=(0,react.useRef)(null);return"container"===as?(0,jsx_runtime.jsx)(Container,{...props,triggerRef,menuRef}):(0,jsx_runtime.jsx)(Hook,{...props,triggerRef,menuRef})},ITEMS=[{value:"plant-01",label:"Petunia"},{value:"plant-02",label:"Hydrangea"},{value:"separator-01",separator:!0},{value:"plant-03",label:"Violet"},{value:"plant-04",label:"Succulent"},{label:"Choose favorites",items:[{value:"fruit-01",label:"Apple",type:"checkbox"},{value:"fruit-02",label:"Banana",disabled:!0,type:"checkbox"},{value:"Cherry",type:"checkbox"},{value:"fruit-04",label:"Kiwi",type:"checkbox"}]},{label:"Select one",items:[{value:"vegetable-01",label:"Asparagus",type:"radio",name:"veggies"},{value:"vegetable-02",label:"Broccoli",disabled:!0,type:"radio",name:"veggies"},{value:"vegetable-03",label:"Brussel sprouts",type:"radio",name:"veggies"},{value:"vegetable-04",label:"Kale",type:"radio",name:"veggies"}]}],README_namespaceObject="# @zendeskgarden/container-menu [![npm version][npm version badge]][npm version link]\n\n[npm version badge]: https://flat.badgen.net/npm/v/@zendeskgarden/container-menu\n[npm version link]: https://www.npmjs.com/package/@zendeskgarden/container-menu\n\nThis package includes containers relating to Menu in the\n[Garden Design System](https://zendeskgarden.github.io/).\n\n## Installation\n\n```sh\nnpm install @zendeskgarden/container-menu\n```\n\n## Usage\n\nCheck out [storybook](https://zendeskgarden.github.io/react-containers) for live examples.\n\n### useMenu\n\n```jsx\nimport { useMenu } from '@zendeskgarden/container-menu';\n\nconst Menu = () => {\n  const triggerRef = useRef();\n  const menuRef = useRef();\n  const items = [\n    { value: 'value-1', label: 'One' },\n    { value: 'value-2', label: 'Two' },\n    { value: 'value-3', label: 'Three' }\n  ];\n  const { isExpanded, getTriggerProps, getMenuProps, getItemProps, getSeparatorProps } = useMenu({\n    triggerRef,\n    menuRef,\n    items\n  });\n\n  return (\n    <>\n      <button {...getTriggerProps()}>Menu</button>\n      <ul {...getMenuProps()} style={{ visibility: isExpanded ? 'visible' : 'hidden' }}>\n        {items.map(item => (\n          <li key={item.value} {...getItemProps({ item })}>\n            {item.label}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n```\n\n### MenuContainer\n\n```jsx\nimport { MenuContainer } from '@zendeskgarden/container-menu';\n\nconst Menu = () => {\n  const triggerRef = useRef();\n  const menuRef = useRef();\n  const items = [\n    { value: 'value-1', label: 'One' },\n    { value: 'value-2', label: 'Two' },\n    { value: 'value-3', label: 'Three' }\n  ];\n\n  return (\n    <MenuContainer triggerRef={triggerRef} menuRef={menuRef} items={items}>\n      {({ isExpanded, getTriggerProps, getMenuProps, getItemProps, getSeparatorProps }) => (\n        <>\n          <button {...getTriggerProps()}>Menu</button>\n          <ul {...getMenuProps()} style={{ visibility: isExpanded ? 'visible' : 'hidden' }}>\n            {items.map(item => (\n              <li key={item.value} {...getItemProps({ item })}>\n                {item.label}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </MenuContainer>\n  );\n};\n```\n";function _createMdxContent(props){const _components=Object.assign({h1:"h1"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Packages/Menu",component:MenuContainer,args:{as:"hook",items:ITEMS},argTypes:{as:{options:["container","hook"],control:"radio",table:{category:"Story"}},menuRef:{control:!1},triggerRef:{control:!1}}}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"api",children:"API"}),"\n",(0,jsx_runtime.jsx)(dist.$4,{}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"uncontrolled",children:"Uncontrolled"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Uncontrolled",argTypes:{isExpanded:{control:!1},focusedValue:{control:!1},selectedItems:{control:!1}},children:args=>(0,jsx_runtime.jsx)(MenuStory,{...args})})}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"controlled",children:"Controlled"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Controlled",argTypes:{defaultFocusedValue:{control:!1},defaultExpanded:{control:!1},focusedValue:{control:{type:"text"}}},args:{isExpanded:!1,focusedValue:"plant-01",selectedItems:[{value:"Cherry",type:"checkbox"}]},children:args=>{const updateArgs=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)()[1],handleChange=(0,react.useCallback)((changes=>{const{type,...args}=changes;updateArgs(args)}),[]);return(0,jsx_runtime.jsx)(MenuStory,{...args,onChange:handleChange})}})}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:README_namespaceObject})]})}const uncontrolled=args=>(0,jsx_runtime.jsx)(MenuStory,{...args});uncontrolled.storyName="Uncontrolled",uncontrolled.argTypes={isExpanded:{control:!1},focusedValue:{control:!1},selectedItems:{control:!1}},uncontrolled.parameters={storySource:{source:"args => <MenuStory {...args} />"}};const controlled=args=>{const updateArgs=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)()[1],handleChange=(0,react.useCallback)((changes=>{const{type,...args}=changes;updateArgs(args)}),[]);return(0,jsx_runtime.jsx)(MenuStory,{...args,onChange:handleChange})};controlled.storyName="Controlled",controlled.argTypes={defaultFocusedValue:{control:!1},defaultExpanded:{control:!1},focusedValue:{control:{type:"text"}}},controlled.args={isExpanded:!1,focusedValue:"plant-01",selectedItems:[{value:"Cherry",type:"checkbox"}]},controlled.parameters={storySource:{source:"args => {\n  const updateArgs = useArgs()[1];\n  const handleChange = useCallback(changes => {\n    const {\n      type,\n      ...args\n    } = changes;\n    updateArgs(args);\n  }, []);\n  return <MenuStory {...args} onChange={handleChange} />;\n}"}};const componentMeta={title:"Packages/Menu",component:MenuContainer,args:{as:"hook",items:ITEMS},argTypes:{as:{options:["container","hook"],control:"radio",table:{category:"Story"}},menuRef:{control:!1},triggerRef:{control:!1}},tags:["stories-mdx"],includeStories:["uncontrolled","controlled"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const menu_stories=componentMeta}}]);