(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[7416],{"./packages/menu/demo/menu.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const README_namespaceObject="# @zendeskgarden/container-menu [![npm version][npm version badge]][npm version link]\n\n[npm version badge]: https://flat.badgen.net/npm/v/@zendeskgarden/container-menu\n[npm version link]: https://www.npmjs.com/package/@zendeskgarden/container-menu\n\nThis package includes containers relating to Menu in the\n[Garden Design System](https://zendeskgarden.github.io/).\n\n## Installation\n\n```sh\nnpm install @zendeskgarden/container-menu\n```\n\n## Usage\n\nCheck out [storybook](https://zendeskgarden.github.io/react-containers) for live examples.\n\n### useMenu\n\n```jsx\nimport { useMenu } from '@zendeskgarden/container-menu';\n\nconst Menu = () => {\n  const triggerRef = useRef();\n  const menuRef = useRef();\n  const items = [\n    { value: 'value-1', label: 'One' },\n    { value: 'value-2', label: 'Two' },\n    { value: 'value-3', label: 'Three' }\n  ];\n  const { isExpanded, getTriggerProps, getMenuProps, getItemProps, getSeparatorProps } = useMenu({\n    triggerRef,\n    menuRef,\n    items\n  });\n\n  return (\n    <>\n      <button {...getTriggerProps()}>Menu</button>\n      <ul {...getMenuProps()} style={{ visibility: isExpanded ? 'visible' : 'hidden' }}>\n        {items.map(item => (\n          <li key={item.value} {...getItemProps({ item })}>\n            {item.label}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n```\n\n### MenuContainer\n\n```jsx\nimport { MenuContainer } from '@zendeskgarden/container-menu';\n\nconst Menu = () => {\n  const triggerRef = useRef();\n  const menuRef = useRef();\n  const items = [\n    { value: 'value-1', label: 'One' },\n    { value: 'value-2', label: 'Two' },\n    { value: 'value-3', label: 'Three', href: '#0' },\n    { value: 'value-4', label: 'Four' }\n  ];\n\n  return (\n    <MenuContainer triggerRef={triggerRef} menuRef={menuRef} items={items}>\n      {({ isExpanded, getTriggerProps, getMenuProps, getItemProps, getSeparatorProps }) => (\n        <>\n          <button {...getTriggerProps()}>Menu</button>\n          <ul {...getMenuProps()} style={{ visibility: isExpanded ? 'visible' : 'hidden' }}>\n            {items.map(item =>\n              item.href ? (\n                <li key={item.value} role=\"none\">\n                  <a {...getItemProps({ item })}>{item.label}</a>\n                </li>\n              ) : (\n                <li key={item.value} {...getItemProps({ item })}>\n                  {item.label}\n                </li>\n              )\n            )}\n          </ul>\n        </>\n      )}\n    </MenuContainer>\n  );\n};\n```\n";var menu_stories=__webpack_require__("./packages/menu/demo/menu.stories.tsx");function _createMdxContent(props){const _components={h1:"h1",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:menu_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"api",children:"API"}),"\n",(0,jsx_runtime.jsx)(dist.H2,{}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"uncontrolled",children:"Uncontrolled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{of:menu_stories.Uncontrolled})}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"controlled",children:"Controlled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{of:menu_stories.Controlled})}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:README_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext}}]);