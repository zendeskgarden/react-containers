"use strict";(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[8796],{"./packages/tooltip/demo/~patterns/patterns.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Focus:()=>Focus,Menu:()=>Menu,__namedExportsOrder:()=>__namedExportsOrder,default:()=>patterns_stories});var react=__webpack_require__("./node_modules/react/index.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),classnames=(__webpack_require__("./node_modules/@storybook/react/dist/index.mjs"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),useTooltip=__webpack_require__("./packages/tooltip/src/useTooltip.ts");const FocusStory=()=>{const triggerRef=(0,react.useRef)(null),{getTooltipProps,getTriggerProps,isVisible,openTooltip,closeTooltip}=(0,useTooltip.f)({triggerRef});return react.createElement(react.Fragment,null,react.createElement("div",(0,esm_extends.A)({className:"bg-grey-200 border border-solid cursor-pointer px-3 py-2 rounded"},getTriggerProps()),"Trigger, then tab to the tooltip <button>"),react.createElement("div",(0,esm_extends.A)({className:classnames_default()("bg-grey-800","inline-block","mt-1","px-2","rounded-sm","text-sm","text-white",isVisible?"visible":"invisible")},getTooltipProps({onFocus:()=>openTooltip(),onBlur:()=>closeTooltip(0)})),"Tooltip with"," ",react.createElement("button",{className:"bg-grey-600 border border-solid border-grey-500 m-1 py-0.5 px-1 rounded-sm text-white"},"tabbable")," ","focus"))};FocusStory.__docgenInfo={description:"",methods:[],displayName:"FocusStory"};var useMenu=__webpack_require__("./packages/menu/src/useMenu.ts");const MenuStory=()=>{const triggerRef=(0,react.useRef)(null),menuRef=(0,react.useRef)(null),{getMenuProps,getTriggerProps:getMenuTriggerProps,isExpanded}=(0,useMenu.b)({items:[],triggerRef,menuRef}),{getTooltipProps,getTriggerProps,isVisible}=(0,useTooltip.f)({triggerRef});return react.createElement("div",{className:"relative"},react.createElement("button",(0,esm_extends.A)({className:"px-2 py-1"},getTriggerProps(),getMenuTriggerProps(),{type:"button"}),"Menu trigger"),react.createElement("span",(0,esm_extends.A)({className:classnames_default()("bg-grey-800","inline-block","ml-1","px-2","py-0.5","rounded-sm","text-sm","text-white",isVisible?"visible":"invisible")},getTooltipProps()),"Tooltip"),react.createElement("ul",(0,esm_extends.A)({className:classnames_default()("border border-grey-400 border-solid w-32 absolute",{invisible:!isExpanded})},getMenuProps()),react.createElement("span",{className:classnames_default()("inline-block","p-3","text-grey-600")},"Empty menu")))};MenuStory.__docgenInfo={description:"",methods:[],displayName:"MenuStory"};const patterns_stories={title:"Packages/Tooltip/[patterns]"},Focus={render:args=>react.createElement(FocusStory,args),name:"Focus"},Menu={render:args=>react.createElement(MenuStory,args),name:"Menu"},__namedExportsOrder=["Focus","Menu"];Focus.parameters={...Focus.parameters,docs:{...Focus.parameters?.docs,source:{originalSource:"{\n  render: args => <FocusStory {...args} />,\n  name: 'Focus'\n}",...Focus.parameters?.docs?.source}}},Menu.parameters={...Menu.parameters,docs:{...Menu.parameters?.docs,source:{originalSource:"{\n  render: args => <MenuStory {...args} />,\n  name: 'Menu'\n}",...Menu.parameters?.docs?.source}}}}}]);