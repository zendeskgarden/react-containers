(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[1886],{"./packages/accordion/demo/accordion.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const README_namespaceObject="# @zendeskgarden/container-accordion [![npm version][npm version badge]][npm version link]\n\n[npm version badge]: https://flat.badgen.net/npm/v/@zendeskgarden/container-accordion\n[npm version link]: https://www.npmjs.com/package/@zendeskgarden/container-accordion\n\nThis package includes containers relating to accordions in the\n[Garden Design System](https://zendeskgarden.github.io/).\n\n## Installation\n\n```sh\nnpm install @zendeskgarden/container-accordion\n```\n\n## Usage\n\nThis container implements the\n[accordion](https://www.w3.org/TR/wai-aria-practices-1.1/#accordion) design\npattern and can be used to build an accordion component. Check out\n[storybook](https://zendeskgarden.github.io/react-containers) for live examples.\n\n### useAccordion\n\nThe `useAccordion` hook manages toggle state and required accessibility\nattributes for a group of sections.\n\n```jsx\nimport { useAccordion } from '@zendeskgarden/container-accordion';\n\nconst Accordion = ({ sections = [0, 1, 2], expandable = true, collapsible = true } = {}) => {\n  const { getHeaderProps, getTriggerProps, getPanelProps, expandedSections, disabledSections } =\n    useAccordion({\n      sections,\n      expandedSections: [0],\n      expandable,\n      collapsible\n    });\n\n  return (\n    <>\n      {sections.map((section, index) => {\n        const disabled = disabledSections.indexOf(index) !== -1;\n        const hidden = expandedSections.indexOf(index) === -1;\n\n        return (\n          <div key={index}>\n            <h2 {...getHeaderProps({ role: null, ariaLevel: null })}>\n              <button\n                {...getTriggerProps({\n                  index,\n                  role: null,\n                  tabIndex: null,\n                  disabled,\n                  style: { width: '100%' }\n                })}\n              >\n                {index}\n              </button>\n            </h2>\n            <section\n              {...getPanelProps({\n                index,\n                role: null,\n                hidden\n              })}\n            >\n              {section}\n            </section>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nreturn <Accordion expandable={true} collapsible={true} />;\n```\n\n### AccordionContainer\n\n`AccordionContainer` is a render-prop wrapper for the `useAccordion` hook.\n\n```jsx\nimport { AccordionContainer } from '@zendeskgarden/container-accordion';\n\nconst Accordion = ({ sections = [0, 1, 2], expandable = true, collapsible = true } = {}) => (\n  <AccordionContainer sections={sections} expandable={expandable} collapsible={collapsible}>\n    {({ getHeaderProps, getTriggerProps, getPanelProps, expandedSections, disabledSections }) => (\n      <>\n        {sections.map((section, index) => {\n          const disabled = disabledSections.indexOf(index) !== -1;\n          const hidden = expandedSections.indexOf(index) === -1;\n\n          return (\n            <div key={index}>\n              <h2 {...getHeaderProps({ role: null, ariaLevel: null })}>\n                <button\n                  {...getTriggerProps({\n                    index,\n                    role: null,\n                    tabIndex: null,\n                    disabled,\n                    style: { width: '100%' }\n                  })}\n                >\n                  {index}\n                </button>\n              </h2>\n              <section\n                {...getPanelProps({\n                  index,\n                  role: null,\n                  hidden\n                })}\n              >\n                {section}\n              </section>\n            </div>\n          );\n        })}\n      </>\n    )}\n  </AccordionContainer>\n);\n\nreturn <Accordion expandable={true} collapsible={true} />;\n```\n";var accordion_stories=__webpack_require__("./packages/accordion/demo/accordion.stories.tsx");function _createMdxContent(props){const _components={h1:"h1",h2:"h2",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:accordion_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"api",children:"API"}),"\n",(0,jsx_runtime.jsx)(dist.H2,{}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"demo",children:"Demo"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"uncontrolled",children:"Uncontrolled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{of:accordion_stories.Uncontrolled})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"controlled",children:"Controlled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{of:accordion_stories.Controlled})}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:README_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext}}]);