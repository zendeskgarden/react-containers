/*! For license information please see accordion-demo-accordion-stories.18c5b9f2.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[5976],{"./node_modules/@reach/auto-id/dist/reach-auto-id.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>useId});var react=__webpack_require__("./node_modules/react/index.js"),react_namespaceObject=__webpack_require__.t(react,2);function canUseDOM(){return!("undefined"==typeof window||!window.document||!window.document.createElement)}var useIsomorphicLayoutEffect=canUseDOM()?react.useLayoutEffect:react.useEffect;var serverHandoffComplete=!1,id=0;function genId(){return++id}var maybeReactUseId=react_namespaceObject["useId".toString()];function useId(providedId){if(void 0!==maybeReactUseId){let generatedId=maybeReactUseId();return providedId??generatedId}let initialId=providedId??(serverHandoffComplete?genId():null),[id2,setId]=react.useState(initialId);return useIsomorphicLayoutEffect((()=>{null===id2&&setId(genId())}),[]),react.useEffect((()=>{!1===serverHandoffComplete&&(serverHandoffComplete=!0)}),[]),providedId??id2??void 0}},"./packages/accordion/demo/accordion.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,Uncontrolled:()=>Uncontrolled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>accordion_stories});var esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("./node_modules/react/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),useId=__webpack_require__("./packages/utilities/src/utils/useId.ts"),getControlledValue=__webpack_require__("./packages/utilities/src/utils/getControlledValue.ts"),composeEventHandlers=__webpack_require__("./packages/utilities/src/utils/composeEventHandlers.ts"),KeyboardEventValues=__webpack_require__("./packages/utilities/src/utils/KeyboardEventValues.ts");function useAccordion(_ref){let{idPrefix,sections=[],expandedSections,defaultExpandedSections,onChange=()=>{},expandable=!0,collapsible=!0}=_ref;const prefix=(0,useId.B)(idPrefix),TRIGGER_ID=`${prefix}--trigger`,PANEL_ID=`${prefix}--panel`,isControlled=null!=expandedSections,[expandedState,setExpandedState]=(0,react.useState)(defaultExpandedSections||sections.slice(0,1)),[disabledState,setDisabledState]=(0,react.useState)(collapsible?[]:expandedState),internalExpandedState=(0,getControlledValue.o)(expandedSections,expandedState),toggle=(0,react.useCallback)((value=>{const expanded=[],disabled=[];sections.forEach((sectionValue=>{let isExpanded=!1;sectionValue===value?isExpanded=!collapsible||!1===internalExpandedState.includes(sectionValue):expandable&&(isExpanded=internalExpandedState.includes(sectionValue)),isExpanded&&(expanded.push(sectionValue),collapsible||disabled.push(sectionValue))})),onChange(value),!1===isControlled&&setExpandedState(expanded),setDisabledState(disabled)}),[sections,internalExpandedState,collapsible,expandable,isControlled,onChange]),getHeaderProps=(0,react.useCallback)((_ref2=>{let{role="heading","aria-level":ariaLevel,...props}=_ref2;return{role:null===role?void 0:role,"aria-level":ariaLevel,"data-garden-container-id":"containers.accordion","data-garden-container-version":"storybook",...props}}),[]),getTriggerProps=(0,react.useCallback)((_ref3=>{let{value,role="button",tabIndex=0,...props}=_ref3;return{id:`${TRIGGER_ID}:${value}`,role:null===role?void 0:role,tabIndex,"aria-controls":`${PANEL_ID}:${value}`,"aria-disabled":disabledState.includes(value)||void 0,"aria-expanded":internalExpandedState.includes(value),onClick:(0,composeEventHandlers.m)(props.onClick,(()=>toggle(value))),onKeyDown:(0,composeEventHandlers.m)(props.onKeyDown,(event=>{event.key!==KeyboardEventValues.R.SPACE&&event.key!==KeyboardEventValues.R.ENTER||(toggle(value),event.preventDefault())})),...props}}),[PANEL_ID,TRIGGER_ID,internalExpandedState,disabledState,toggle]),getPanelProps=(0,react.useCallback)((_ref4=>{let{value,role="region",...props}=_ref4;return{id:`${PANEL_ID}:${value}`,role:null===role?void 0:role,"aria-hidden":!internalExpandedState.includes(value),"aria-labelledby":`${TRIGGER_ID}:${value}`,...props}}),[PANEL_ID,TRIGGER_ID,internalExpandedState]);return(0,react.useMemo)((()=>({getHeaderProps,getTriggerProps,getPanelProps,expandedSections:internalExpandedState,disabledSections:disabledState})),[getHeaderProps,getTriggerProps,getPanelProps,internalExpandedState,disabledState])}const AccordionContainer=props=>{const{children,render=children,...options}=props;return react.createElement(react.Fragment,null,render(useAccordion(options)))};AccordionContainer.defaultProps={expandable:!0,collapsible:!0},AccordionContainer.propTypes={children:prop_types_default().func,render:prop_types_default().func,sections:prop_types_default().array.isRequired,expandedSections:prop_types_default().array,defaultExpandedSections:prop_types_default().array,expandable:prop_types_default().bool,collapsible:prop_types_default().bool,idPrefix:prop_types_default().string,onChange:prop_types_default().func},AccordionContainer.__docgenInfo={description:"",methods:[],displayName:"AccordionContainer",props:{idPrefix:{required:!1,tsType:{name:"string"},description:"Prefixes IDs for the accordion trigger and panels",type:{name:"string"}},sections:{required:!0,tsType:{name:"Array",elements:[{name:"Value"}],raw:"Value[]"},description:"Provides an ordered list of unique section values",type:{name:"array"}},expandedSections:{required:!1,tsType:{name:"Array",elements:[{name:"Value"}],raw:"Value[]"},description:"Sets the expanded sections in a controlled accordion",type:{name:"array"}},defaultExpandedSections:{required:!1,tsType:{name:"Array",elements:[{name:"Value"}],raw:"Value[]"},description:"Sets the default expanded sections in a uncontrolled accordion",type:{name:"array"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: Value) => void",signature:{arguments:[{type:{name:"Value"},name:"expanded"}],return:{name:"void"}}},description:"Handles accordion expansion changes",type:{name:"func"}},expandable:{required:!1,tsType:{name:"boolean"},description:"Determines if multiple panels can be expanded at the same time in an uncontrolled accordion",defaultValue:{value:"true",computed:!1},type:{name:"bool"}},collapsible:{required:!1,tsType:{name:"boolean"},description:"Determines if panels can be collapsed in an uncontrolled accordion",defaultValue:{value:"true",computed:!1},type:{name:"bool"}},render:{required:!1,tsType:{name:"signature",type:"function",raw:"(options: {\n  /* prop getters */\n  getHeaderProps: IUseAccordionReturnValue<Value>['getHeaderProps'];\n  getTriggerProps: IUseAccordionReturnValue<Value>['getTriggerProps'];\n  getPanelProps: IUseAccordionReturnValue<Value>['getPanelProps'];\n  /* state */\n  expandedSections: IUseAccordionReturnValue<Value>['expandedSections'];\n  disabledSections: IUseAccordionReturnValue<Value>['disabledSections'];\n}) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  /* prop getters */\n  getHeaderProps: IUseAccordionReturnValue<Value>['getHeaderProps'];\n  getTriggerProps: IUseAccordionReturnValue<Value>['getTriggerProps'];\n  getPanelProps: IUseAccordionReturnValue<Value>['getPanelProps'];\n  /* state */\n  expandedSections: IUseAccordionReturnValue<Value>['expandedSections'];\n  disabledSections: IUseAccordionReturnValue<Value>['disabledSections'];\n}",signature:{properties:[{key:"getHeaderProps",value:{name:"IUseAccordionReturnValue['getHeaderProps']",raw:"IUseAccordionReturnValue<Value>['getHeaderProps']",required:!0}},{key:"getTriggerProps",value:{name:"IUseAccordionReturnValue['getTriggerProps']",raw:"IUseAccordionReturnValue<Value>['getTriggerProps']",required:!0}},{key:"getPanelProps",value:{name:"IUseAccordionReturnValue['getPanelProps']",raw:"IUseAccordionReturnValue<Value>['getPanelProps']",required:!0}},{key:"expandedSections",value:{name:"IUseAccordionReturnValue['expandedSections']",raw:"IUseAccordionReturnValue<Value>['expandedSections']",required:!0}},{key:"disabledSections",value:{name:"IUseAccordionReturnValue['disabledSections']",raw:"IUseAccordionReturnValue<Value>['disabledSections']",required:!0}}]}},name:"options"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"Provides accordion render prop functions and state\n\n@param {function} [options.getHeaderProps] Header props getter\n@param {function} [options.getTriggerProps] Trigger props getter\n@param {function} [options.getPanelProps] Panel props getter\n@param {*[]} options.expandedSections Current expanded sections\n@param {*[]} options.disabledSections Current disabled sections",type:{name:"func"}},children:{required:!1,tsType:{name:"signature",type:"function",raw:"(options: IUseAccordionReturnValue<Value>) => React.ReactNode",signature:{arguments:[{type:{name:"IUseAccordionReturnValue",elements:[{name:"Value"}],raw:"IUseAccordionReturnValue<Value>"},name:"options"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"@ignore",type:{name:"func"}}}};__webpack_require__("./node_modules/@storybook/react/dist/index.mjs");const Component=_ref=>{let{sections,disabledSections,expandedSections,getHeaderProps,getTriggerProps,getPanelProps}=_ref;return react.createElement("div",{style:{width:300}},sections.map(((value,index)=>{const disabled=-1!==disabledSections.indexOf(value),hidden=-1===expandedSections.indexOf(value);return react.createElement("div",{key:value},react.createElement("div",getHeaderProps({"aria-level":2}),react.createElement("button",(0,esm_extends.A)({},getTriggerProps({value,role:null,disabled}),{className:"text-left w-full",type:"button"}),`Trigger ${index+1}`)),react.createElement("section",getPanelProps({value,role:null,hidden}),`[Panel ${index+1}] `,"Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi tomatillo melon azuki bean garlic."))})))},Container=props=>react.createElement(AccordionContainer,props,(containerProps=>react.createElement(Component,(0,esm_extends.A)({sections:props.sections},containerProps)))),Hook=props=>{const hookProps=useAccordion(props);return react.createElement(Component,(0,esm_extends.A)({sections:props.sections},hookProps))},AccordionStory=_ref2=>{let{as,...props}=_ref2;return"container"===as?react.createElement(Container,props):react.createElement(Hook,props)};AccordionStory.__docgenInfo={description:"",methods:[],displayName:"AccordionStory",props:{idPrefix:{required:!1,tsType:{name:"string"},description:"Prefixes IDs for the accordion trigger and panels"},sections:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"Value[]"},description:"Provides an ordered list of unique section values"},expandedSections:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"Value[]"},description:"Sets the expanded sections in a controlled accordion"},defaultExpandedSections:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"Value[]"},description:"Sets the default expanded sections in a uncontrolled accordion"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: Value) => void",signature:{arguments:[{type:{name:"string"},name:"expanded"}],return:{name:"void"}}},description:"Handles accordion expansion changes"},expandable:{required:!1,tsType:{name:"boolean"},description:"Determines if multiple panels can be expanded at the same time in an uncontrolled accordion"},collapsible:{required:!1,tsType:{name:"boolean"},description:"Determines if panels can be collapsed in an uncontrolled accordion"},render:{required:!1,tsType:{name:"signature",type:"function",raw:"(options: {\n  /* prop getters */\n  getHeaderProps: IUseAccordionReturnValue<Value>['getHeaderProps'];\n  getTriggerProps: IUseAccordionReturnValue<Value>['getTriggerProps'];\n  getPanelProps: IUseAccordionReturnValue<Value>['getPanelProps'];\n  /* state */\n  expandedSections: IUseAccordionReturnValue<Value>['expandedSections'];\n  disabledSections: IUseAccordionReturnValue<Value>['disabledSections'];\n}) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  /* prop getters */\n  getHeaderProps: IUseAccordionReturnValue<Value>['getHeaderProps'];\n  getTriggerProps: IUseAccordionReturnValue<Value>['getTriggerProps'];\n  getPanelProps: IUseAccordionReturnValue<Value>['getPanelProps'];\n  /* state */\n  expandedSections: IUseAccordionReturnValue<Value>['expandedSections'];\n  disabledSections: IUseAccordionReturnValue<Value>['disabledSections'];\n}",signature:{properties:[{key:"getHeaderProps",value:{name:"IUseAccordionReturnValue['getHeaderProps']",raw:"IUseAccordionReturnValue<Value>['getHeaderProps']",required:!0}},{key:"getTriggerProps",value:{name:"IUseAccordionReturnValue['getTriggerProps']",raw:"IUseAccordionReturnValue<Value>['getTriggerProps']",required:!0}},{key:"getPanelProps",value:{name:"IUseAccordionReturnValue['getPanelProps']",raw:"IUseAccordionReturnValue<Value>['getPanelProps']",required:!0}},{key:"expandedSections",value:{name:"IUseAccordionReturnValue['expandedSections']",raw:"IUseAccordionReturnValue<Value>['expandedSections']",required:!0}},{key:"disabledSections",value:{name:"IUseAccordionReturnValue['disabledSections']",raw:"IUseAccordionReturnValue<Value>['disabledSections']",required:!0}}]}},name:"options"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"Provides accordion render prop functions and state\n\n@param {function} [options.getHeaderProps] Header props getter\n@param {function} [options.getTriggerProps] Trigger props getter\n@param {function} [options.getPanelProps] Panel props getter\n@param {*[]} options.expandedSections Current expanded sections\n@param {*[]} options.disabledSections Current disabled sections"},children:{required:!1,tsType:{name:"signature",type:"function",raw:"(options: IUseAccordionReturnValue<Value>) => React.ReactNode",signature:{arguments:[{type:{name:"IUseAccordionReturnValue",elements:[{name:"string"}],raw:"IUseAccordionReturnValue<Value>"},name:"options"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"@ignore"},as:{required:!0,tsType:{name:"union",raw:"'hook' | 'container'",elements:[{name:"literal",value:"'hook'"},{name:"literal",value:"'container'"}]},description:""}}};const SECTIONS=["section-1","section-2","section-3","section-4","section-5"],accordion_stories={title:"Packages/Accordion",component:AccordionContainer,args:{as:"hook",sections:SECTIONS},argTypes:{as:{options:["container","hook"],control:"radio",table:{category:"Story"}}}},Uncontrolled={render:args=>react.createElement(AccordionStory,args),name:"Uncontrolled",args:{collapsible:!0,expandable:!0},argTypes:{expandedSections:{control:!1}}},Controlled={render:function Render(args){const updateArgs=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useArgs)()[1];return react.createElement(AccordionStory,(0,esm_extends.A)({},args,{onChange:value=>{let expandedSections=args.expandedSections||[];expandedSections=expandedSections.includes(value)?expandedSections.filter((section=>section!==value)):[...expandedSections,value],updateArgs({expandedSections})}}))},name:"Controlled",args:{expandedSections:SECTIONS.slice(0,1)},argTypes:{defaultExpandedSections:{control:!1},collapsible:{control:!1},expandable:{control:!1}}},__namedExportsOrder=["Uncontrolled","Controlled"];Uncontrolled.parameters={...Uncontrolled.parameters,docs:{...Uncontrolled.parameters?.docs,source:{originalSource:"{\n  render: args => <AccordionStory {...args} />,\n  name: 'Uncontrolled',\n  args: {\n    collapsible: true,\n    expandable: true\n  },\n  argTypes: {\n    expandedSections: {\n      control: false\n    }\n  }\n}",...Uncontrolled.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"{\n  render: function Render(args) {\n    const updateArgs = useArgs()[1];\n    return <AccordionStory {...args} onChange={value => {\n      let expandedSections = args.expandedSections || [];\n      expandedSections = expandedSections!.includes(value) ? expandedSections!.filter(section => section !== value) : [...expandedSections!, value];\n      updateArgs({\n        expandedSections\n      });\n    }} />;\n  },\n  name: 'Controlled',\n  args: {\n    expandedSections: SECTIONS.slice(0, 1)\n  },\n  argTypes: {\n    defaultExpandedSections: {\n      control: false\n    },\n    collapsible: {\n      control: false\n    },\n    expandable: {\n      control: false\n    }\n  }\n}",...Controlled.parameters?.docs?.source}}}},"./node_modules/@storybook/react/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var _chunk_OOL6AVF7_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/react/dist/chunk-OOL6AVF7.mjs"),_storybook_global__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/@storybook/react/dist/chunk-H6MOWX77.mjs"),__webpack_require__("@storybook/global")),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/index.js"),{window:globalWindow}=(__webpack_require__("storybook/internal/preview-api"),_storybook_global__WEBPACK_IMPORTED_MODULE_2__.global);globalWindow&&(globalWindow.STORYBOOK_ENV="react");_chunk_OOL6AVF7_mjs__WEBPACK_IMPORTED_MODULE_0__.IX},"./packages/utilities/src/utils/KeyboardEventValues.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>KEYS});const KEYS={ALT:"Alt",ASTERISK:"*",BACKSPACE:"Backspace",COMMA:",",DELETE:"Delete",DOWN:"ArrowDown",END:"End",ENTER:"Enter",ESCAPE:"Escape",HOME:"Home",LEFT:"ArrowLeft",NUMPAD_ADD:"Add",NUMPAD_DECIMAL:"Decimal",NUMPAD_DIVIDE:"Divide",NUMPAD_ENTER:"Enter",NUMPAD_MULTIPLY:"Multiply",NUMPAD_SUBTRACT:"Subtract",PAGE_DOWN:"PageDown",PAGE_UP:"PageUp",PERIOD:".",RIGHT:"ArrowRight",SHIFT:"Shift",SPACE:" ",TAB:"Tab",UNIDENTIFIED:"Unidentified",UP:"ArrowUp"}},"./packages/utilities/src/utils/composeEventHandlers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function composeEventHandlers(){for(var _len=arguments.length,fns=new Array(_len),_key=0;_key<_len;_key++)fns[_key]=arguments[_key];return function(event){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];return fns.some((fn=>(fn&&fn(event,...args),event&&event.defaultPrevented)))}}__webpack_require__.d(__webpack_exports__,{m:()=>composeEventHandlers})},"./packages/utilities/src/utils/getControlledValue.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function getControlledValue(){for(var _len=arguments.length,values=new Array(_len),_key=0;_key<_len;_key++)values[_key]=arguments[_key];for(const value of values)if(void 0!==value)return value}__webpack_require__.d(__webpack_exports__,{o:()=>getControlledValue})},"./packages/utilities/src/utils/useId.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>useId});var _reach_auto_id__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@reach/auto-id/dist/reach-auto-id.mjs");let idCounter=0;const useId=id=>(0,_reach_auto_id__WEBPACK_IMPORTED_MODULE_0__.B)(id)||"id:"+idCounter++}}]);