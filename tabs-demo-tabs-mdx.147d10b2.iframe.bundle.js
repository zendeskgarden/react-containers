(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[1612],{"./packages/tabs/demo/tabs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const README_namespaceObject="# @zendeskgarden/container-tabs [![npm version][npm version badge]][npm version link]\n\n[npm version badge]: https://flat.badgen.net/npm/v/@zendeskgarden/container-tabs\n[npm version link]: https://www.npmjs.com/package/@zendeskgarden/container-tabs\n\nThis package includes containers relating to tabs in the\n[Garden Design System](https://zendeskgarden.github.io/).\n\n## Installation\n\n```sh\nnpm install @zendeskgarden/container-tabs\n```\n\n## Usage\n\nThis container implements the\n[tabs](https://www.w3.org/TR/wai-aria-practices/#tabpanel) design pattern and\ncan be used to build a tabbed interface. Check out\n[storybook](https://zendeskgarden.github.io/react-containers) for live examples.\n\n### useTabs\n\n```jsx\nimport { useTabs } from '@zendeskgarden/container-tabs';\n\nconst tabs = [{ value: 'Tab 1' }, { value: 'Tab 2' }, { value: 'Tab 3' }];\n\nconst Tabs = () => {\n  const { selectedValue, getTabProps, getTabListProps, getTabPanelProps } = useTabs({\n    tabs\n  });\n  const tabComponents = [];\n  const tabPanels = [];\n\n  tabs.forEach(({ value }, index) => {\n    tabComponents.push(\n      <li\n        {...getTabProps({\n          value,\n          key: value,\n          style: {\n            borderBottom: `3px solid ${value === selectedValue ? '#1f73b7' : 'transparent'}`\n          }\n        })}\n      >\n        {value}\n      </li>\n    );\n\n    tabPanels.push(\n      <div\n        {...getTabPanelProps({\n          value,\n          key: value,\n          style: {\n            padding: '10px 0',\n            borderTop: '1px solid'\n          }\n        })}\n      >\n        {value} Content\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <ul\n        {...getTabListProps({\n          style: { display: 'flex' }\n        })}\n      >\n        {tabComponents}\n      </ul>\n      {tabPanels}\n    </>\n  );\n};\n```\n\n### TabsContainer\n\n```jsx\nimport { TabsContainer } from '@zendeskgarden/container-tabs';\n\nconst tabs = [{ value: 'Tab 1' }, { value: 'Tab 2' }, { value: 'Tab 3' }];\n\nconst Tabs = () => {\n  const tabComponents = [];\n  const tabPanels = [];\n\n  return (\n    <TabsContainer tabs={tabs}>\n      {({ selectedValue, getTabProps, getTabListProps, getTabPanelProps }) => {\n        tabs.forEach(({ value }, index) => {\n          tabComponents.push(\n            <li\n              {...getTabProps({\n                value,\n                key: value,\n                style: {\n                  borderBottom: `3px solid ${value === selectedValue ? '#1f73b7' : 'transparent'}`\n                }\n              })}\n            >\n              {value}\n            </li>\n          );\n\n          tabPanels.push(\n            <div\n              {...getTabPanelProps({\n                value,\n                key: value,\n                style: {\n                  padding: '10px 0',\n                  borderTop: '1px solid'\n                }\n              })}\n            >\n              {value} Content\n            </div>\n          );\n        });\n\n        return (\n          <>\n            <ul\n              {...getTabListProps({\n                style: { display: 'flex' }\n              })}\n            >\n              {tabComponents}\n            </ul>\n            {tabPanels}\n          </>\n        );\n      }}\n      }\n    </TabsContainer>\n  );\n};\n```\n";var tabs_stories=__webpack_require__("./packages/tabs/demo/tabs.stories.tsx");function _createMdxContent(props){const _components={h1:"h1",h2:"h2",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:tabs_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"api",children:"API"}),"\n",(0,jsx_runtime.jsx)(dist.H2,{}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"demo",children:"Demo"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"uncontrolled",children:"Uncontrolled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{of:tabs_stories.Uncontrolled})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"controlled",children:"Controlled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{of:tabs_stories.Controlled})}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:README_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext}}]);