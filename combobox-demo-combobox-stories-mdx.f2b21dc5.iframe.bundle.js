"use strict";(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[436],{"./packages/field/src/useField.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>useField});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/utilities/node_modules/@reach/auto-id/dist/reach-auto-id.mjs");const useField=_ref=>{let{idPrefix,hasHint,hasMessage}=_ref;const prefix=(0,_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_1__.M)(idPrefix),inputId=`${prefix}--input`,labelId=`${prefix}--label`,hintId=`${prefix}--hint`,messageId=`${prefix}--message`,getLabelProps=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((function(_temp){let{id=labelId,htmlFor=inputId,...other}=void 0===_temp?{}:_temp;return{"data-garden-container-id":"containers.field.label","data-garden-container-version":"storybook",id,htmlFor,...other}}),[labelId,inputId]),getHintProps=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((function(_temp2){let{id=hintId,...other}=void 0===_temp2?{}:_temp2;return{"data-garden-container-id":"containers.field.hint","data-garden-container-version":"storybook",id,...other}}),[hintId]),getInputProps=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((function(_temp3){let{id=inputId,...other}=void 0===_temp3?{}:_temp3;const describedBy=[];return hasHint&&describedBy.push(hintId),hasMessage&&describedBy.push(messageId),{"data-garden-container-id":"containers.field.input","data-garden-container-version":"storybook",id,"aria-labelledby":labelId,"aria-describedby":describedBy.length>0?describedBy.join(" "):void 0,...other}}),[inputId,labelId,hintId,messageId,hasHint,hasMessage]),getMessageProps=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((function(_temp4){let{id=messageId,role="alert",...other}=void 0===_temp4?{}:_temp4;return{"data-garden-container-id":"containers.field.message","data-garden-container-version":"storybook",role:null===role?void 0:role,id,...other}}),[messageId]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({getLabelProps,getHintProps,getInputProps,getMessageProps})),[getLabelProps,getHintProps,getInputProps,getMessageProps])}},"./packages/grid/src/useGrid.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>useGrid});var react=__webpack_require__("./node_modules/react/index.js"),KeyboardEventValues=__webpack_require__("./packages/utilities/src/utils/KeyboardEventValues.ts"),reach_auto_id=__webpack_require__("./packages/utilities/node_modules/@reach/auto-id/dist/reach-auto-id.mjs"),composeEventHandlers=__webpack_require__("./packages/utilities/src/utils/composeEventHandlers.ts");const getCellDown=(matrix,rowIndex,colIndex,wrap)=>{let retVal=[];const rowCount=matrix.length,colCount=matrix[0].length,lastRowLength=matrix[rowCount-1].length;return rowIndex===rowCount-(colCount>lastRowLength?2:1)&&colIndex===colCount-1||(rowIndex===rowCount-(colIndex>=lastRowLength?2:1)?wrap&&(retVal=[0,colIndex+1]):retVal=[rowIndex+1,colIndex]),retVal},getCellLeft=(matrix,rowIndex,colIndex,wrap)=>{let retVal=[];const colCount=matrix[0].length;return 0===rowIndex&&0===colIndex||(0===colIndex?wrap&&(retVal=[rowIndex-1,colCount-1]):retVal=[rowIndex,colIndex-1]),retVal},getCellRight=(matrix,rowIndex,colIndex,wrap)=>{let retVal=[];const rowCount=matrix.length,colCount=matrix[0].length,lastRowIndex=rowCount-1,lastColIndex=matrix[lastRowIndex].length-1;return rowIndex===lastRowIndex&&colIndex===lastColIndex||(colIndex===colCount-1?wrap&&(retVal=[rowIndex+1,0]):retVal=[rowIndex,colIndex+1]),retVal},getCellUp=(matrix,rowIndex,colIndex,wrap)=>{let retVal=[];const rowCount=matrix.length;if(!(0===rowIndex&&0===colIndex))if(0===rowIndex){if(wrap){const col=colIndex-1;retVal=[rowCount-(col>=matrix[rowCount-1].length?2:1),col]}}else retVal=[rowIndex-1,colIndex];return retVal},getId=(idPrefix,rowIndex,colIndex)=>`${idPrefix}--R${rowIndex+1}C${colIndex+1}`,GRID_KEYS=[KeyboardEventValues.t.LEFT,KeyboardEventValues.t.RIGHT,KeyboardEventValues.t.UP,KeyboardEventValues.t.DOWN,KeyboardEventValues.t.HOME,KeyboardEventValues.t.END];function useGrid(_ref){let{rtl,wrap,matrix,idPrefix,onChange=()=>{},environment,rowIndex:controlledRowIndex,colIndex:controlledColIndex,defaultRowIndex,defaultColIndex}=_ref;const doc=environment||document,prefix=(0,reach_auto_id.M)(idPrefix),[uncontrolledRowIndex,setUncontrolledRowIndex]=(0,react.useState)(null!=defaultRowIndex?defaultRowIndex:0),[uncontrolledColIndex,setUncontrolledColIndex]=(0,react.useState)(null!=defaultColIndex?defaultColIndex:0),isControlled=null!==controlledRowIndex&&null!==controlledColIndex&&void 0!==controlledRowIndex&&void 0!==controlledColIndex,rowIndex=isControlled?controlledRowIndex:uncontrolledRowIndex,colIndex=isControlled?controlledColIndex:uncontrolledColIndex;(0,react.useEffect)((()=>{const rowCount=matrix.length,colCount=matrix[0].length,isRowIndexInvalid=rowIndex>=rowCount,isColIndexInvalid=colIndex>=colCount;if(isRowIndexInvalid||isColIndexInvalid){let _rowIndex=rowIndex,_colIndex=colIndex;isRowIndexInvalid&&(_rowIndex=rowCount>0?rowCount-1:0),isColIndexInvalid&&(_colIndex=colCount>0?colCount-1:0),isControlled||(setUncontrolledRowIndex(_rowIndex),setUncontrolledColIndex(_colIndex)),onChange(_rowIndex,_colIndex)}}),[matrix,rowIndex,colIndex,isControlled,setUncontrolledColIndex,onChange]);const getGridProps=(0,react.useCallback)((_ref2=>{let{role="grid",...other}=_ref2;return{"data-garden-container-id":"containers.grid","data-garden-container-version":"storybook",role:null===role?void 0:role,...other}}),[]),getGridCellProps=(0,react.useCallback)((function(_temp){let{role="gridcell",rowIndex:_rowIndex,colIndex:_colIndex,onFocus,onKeyDown,...other}=void 0===_temp?{rowIndex:0,colIndex:0}:_temp;return{"data-garden-container-id":"containers.grid.cell","data-garden-container-version":"storybook",id:getId(prefix,_rowIndex,_colIndex),role:null===role?void 0:role,tabIndex:rowIndex===_rowIndex&&colIndex===_colIndex?0:-1,onFocus:(0,composeEventHandlers.M)(onFocus,(()=>{isControlled||(setUncontrolledRowIndex(_rowIndex),setUncontrolledColIndex(_colIndex)),onChange(_rowIndex,_colIndex)})),onKeyDown:(0,composeEventHandlers.M)(onKeyDown,(event=>{if(GRID_KEYS.includes(event.key)){event.preventDefault();let row=rowIndex,col=colIndex;switch(event.key){case KeyboardEventValues.t.RIGHT:[row,col]=rtl?getCellLeft(matrix,rowIndex,colIndex,wrap):getCellRight(matrix,rowIndex,colIndex,wrap);break;case KeyboardEventValues.t.LEFT:[row,col]=rtl?getCellRight(matrix,rowIndex,colIndex,wrap):getCellLeft(matrix,rowIndex,colIndex,wrap);break;case KeyboardEventValues.t.DOWN:[row,col]=getCellDown(matrix,rowIndex,colIndex,wrap);break;case KeyboardEventValues.t.UP:[row,col]=getCellUp(matrix,rowIndex,colIndex,wrap);break;case KeyboardEventValues.t.HOME:row=event.ctrlKey?0:rowIndex,col=0;break;case KeyboardEventValues.t.END:{const lastRowIndex=matrix.length-1,lastColIndex=matrix[lastRowIndex].length-1;row=event.ctrlKey?lastRowIndex:rowIndex,col=event.ctrlKey?lastColIndex:matrix[rowIndex].length-1;break}}if(row!==rowIndex||col!==colIndex){const id=getId(prefix,row,col),element=doc.getElementById(id);element?.focus()}}})),...other}}),[matrix,rowIndex,colIndex,doc,prefix,isControlled,onChange,rtl,wrap]);return(0,react.useMemo)((()=>({getGridProps,getGridCellProps})),[getGridProps,getGridCellProps])}},"./packages/utilities/src/utils/KeyboardEventValues.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{n:()=>KEY_CODES,t:()=>KEYS});const KEY_CODES={ALT:18,ASTERISK:170,BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38},KEYS={ALT:"Alt",ASTERISK:"*",BACKSPACE:"Backspace",COMMA:",",DELETE:"Delete",DOWN:"ArrowDown",END:"End",ENTER:"Enter",ESCAPE:"Escape",HOME:"Home",LEFT:"ArrowLeft",NUMPAD_ADD:"Add",NUMPAD_DECIMAL:"Decimal",NUMPAD_DIVIDE:"Divide",NUMPAD_ENTER:"Enter",NUMPAD_MULTIPLY:"Multiply",NUMPAD_SUBTRACT:"Subtract",PAGE_DOWN:"PageDown",PAGE_UP:"PageUp",PERIOD:".",RIGHT:"ArrowRight",SHIFT:"Shift",SPACE:" ",TAB:"Tab",UNIDENTIFIED:"Unidentified",UP:"ArrowUp"}},"./packages/utilities/src/utils/composeEventHandlers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function composeEventHandlers(){for(var _len=arguments.length,fns=new Array(_len),_key=0;_key<_len;_key++)fns[_key]=arguments[_key];return function(event){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];return fns.some((fn=>(fn&&fn(event,...args),event&&event.defaultPrevented)))}}__webpack_require__.d(__webpack_exports__,{M:()=>composeEventHandlers})},"./packages/combobox/demo/combobox.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{controlled:()=>controlled,default:()=>combobox_stories,uncontrolled:()=>uncontrolled});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),external_STORYBOOK_MODULE_CLIENT_API_=__webpack_require__("@storybook/client-api"),prop_types=__webpack_require__("./packages/combobox/node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),useField=__webpack_require__("./packages/field/src/useField.ts"),reach_auto_id=__webpack_require__("./packages/utilities/node_modules/@reach/auto-id/dist/reach-auto-id.mjs"),composeEventHandlers=__webpack_require__("./packages/utilities/src/utils/composeEventHandlers.ts"),KeyboardEventValues=__webpack_require__("./packages/utilities/src/utils/KeyboardEventValues.ts"),downshift_esm=__webpack_require__("./packages/combobox/node_modules/downshift/dist/downshift.esm.js");const typeMap={[downshift_esm.Kb.stateChangeTypes.FunctionCloseMenu]:"fn:setExpansion",[downshift_esm.Kb.stateChangeTypes.FunctionOpenMenu]:"fn:setExpansion",[downshift_esm.Kb.stateChangeTypes.FunctionToggleMenu]:"fn:setExpansion",[downshift_esm.Kb.stateChangeTypes.FunctionReset]:"fn:reset",[downshift_esm.Kb.stateChangeTypes.FunctionSelectItem]:"fn:setSelectionValue",[downshift_esm.Kb.stateChangeTypes.FunctionSetHighlightedIndex]:"fn:setActiveIndex",[downshift_esm.Kb.stateChangeTypes.FunctionSetInputValue]:"fn:setInputValue",[downshift_esm.Kb.stateChangeTypes.InputBlur]:"input:blur",[downshift_esm.Kb.stateChangeTypes.InputChange]:"input:change",[downshift_esm.Kb.stateChangeTypes.InputFocus]:"input:focus",[downshift_esm.Kb.stateChangeTypes.InputKeyDownArrowDown]:`input:keyDown:${KeyboardEventValues.t.DOWN}`,[downshift_esm.Kb.stateChangeTypes.InputKeyDownArrowUp]:`input:keyDown:${KeyboardEventValues.t.UP}`,[downshift_esm.Kb.stateChangeTypes.InputKeyDownEnd]:`input:keyDown:${KeyboardEventValues.t.END}`,[downshift_esm.Kb.stateChangeTypes.InputKeyDownEnter]:`input:keyDown:${KeyboardEventValues.t.ENTER}`,[downshift_esm.Kb.stateChangeTypes.InputKeyDownEscape]:`input:keyDown:${KeyboardEventValues.t.ESCAPE}`,[downshift_esm.Kb.stateChangeTypes.InputKeyDownHome]:`input:keyDown:${KeyboardEventValues.t.HOME}`,[downshift_esm.Kb.stateChangeTypes.InputKeyDownPageDown]:`input:keyDown:${KeyboardEventValues.t.PAGE_DOWN}`,[downshift_esm.Kb.stateChangeTypes.InputKeyDownPageUp]:`input:keyDown:${KeyboardEventValues.t.PAGE_UP}`,[downshift_esm.Kb.stateChangeTypes.ItemClick]:"option:click",[downshift_esm.Kb.stateChangeTypes.ItemMouseMove]:"option:mouseMove",[downshift_esm.Kb.stateChangeTypes.MenuMouseLeave]:"listbox:mouseLeave",[downshift_esm.Kb.stateChangeTypes.ToggleButtonClick]:"toggle:click"},toType=downshiftType=>typeMap[downshiftType]||downshiftType,toLabel=(labels,value)=>{if(void 0===value)return"";return labels["string"==typeof value?value:JSON.stringify(value)]},useCombobox=_ref=>{let{idPrefix,triggerRef,inputRef,listboxRef,isAutocomplete,isMultiselectable,isEditable=!0,disabled,hasHint,hasMessage,options=[],inputValue,selectionValue,isExpanded,defaultExpanded,initialExpanded,activeIndex,defaultActiveIndex,initialActiveIndex,onChange=()=>{},environment}=_ref;const win=environment||window,prefix=`${(0,reach_auto_id.M)(idPrefix)}-`,[triggerContainsInput,setTriggerContainsInput]=(0,react.useState)(),[matchValue,setMatchValue]=(0,react.useState)(""),matchTimeoutRef=(0,react.useRef)(),previousStateRef=(0,react.useRef)(),labels=(0,react.useMemo)((()=>({})),[]),selectedValues=(0,react.useMemo)((()=>[]),[]),disabledValues=(0,react.useMemo)((()=>[]),[]),values=(0,react.useMemo)((()=>{const retVal=[],setValues=option=>{if(option.disabled)disabledValues.includes(option.value)||disabledValues.push(option.value);else{retVal.push(option.value);const index=disabledValues.indexOf(option.value);-1!==index&&disabledValues.splice(index,1)}option.selected&&!selectedValues.includes(option.value)&&selectedValues.push(option.value);const key="string"==typeof option.value?option.value:JSON.stringify(option.value);labels[key]=option.label||key};return options.forEach((option=>{"options"in option?option.options.forEach(setValues):setValues(option)})),retVal}),[options,disabledValues,selectedValues,labels]),initialSelectionValue=isMultiselectable?selectedValues:selectedValues[0],initialInputValue=isMultiselectable?"":toLabel(labels,initialSelectionValue),_defaultActiveIndex=(0,react.useMemo)((()=>void 0===defaultActiveIndex?isAutocomplete&&isEditable?0:void 0:defaultActiveIndex),[defaultActiveIndex,isAutocomplete,isEditable]);if(null==selectionValue&&!isMultiselectable&&selectedValues.length>1)throw new Error("Error: expected useCombobox `options` to have no more than one selected.");if(null!=selectionValue){if(isMultiselectable&&!Array.isArray(selectionValue))throw new Error("Error: expected multiselectable useCombobox `selectionValue` to be an array.");if(!isMultiselectable&&Array.isArray(selectionValue))throw new Error("Error: expected useCombobox `selectionValue` not to be an array.")}const getOptionId=(0,react.useCallback)(((index,isDisabled)=>`${prefix}-option${isDisabled?"-disabled":""}-${index}`),[prefix]),{selectedItem:_selectionValue,isOpen:_isExpanded,highlightedIndex:_activeIndex,inputValue:_inputValue,getToggleButtonProps:getDownshiftTriggerProps,getInputProps:getDownshiftInputProps,getMenuProps:getDownshiftListboxProps,getItemProps:getDownshiftOptionProps,closeMenu,openMenu,setHighlightedIndex,selectItem}=(0,downshift_esm.Kb)({id:prefix,toggleButtonId:`${prefix}-trigger`,menuId:`${prefix}-listbox`,getItemId:getOptionId,items:values,inputValue,initialInputValue,itemToString:value=>value?toLabel(labels,value):"",selectedItem:selectionValue,initialSelectedItem:initialSelectionValue,isOpen:isExpanded,defaultIsOpen:defaultExpanded,initialIsOpen:initialExpanded,highlightedIndex:activeIndex,defaultHighlightedIndex:_defaultActiveIndex,initialHighlightedIndex:initialActiveIndex,onStateChange:_ref2=>{let{type,isOpen,selectedItem,inputValue:_inputValue,highlightedIndex}=_ref2;return onChange({type:toType(type),...void 0!==isOpen&&{isExpanded:isOpen},...void 0!==selectedItem&&{selectionValue:selectedItem},...void 0!==_inputValue&&{inputValue:_inputValue},...void 0!==highlightedIndex&&{activeIndex:highlightedIndex}})},stateReducer:(state,_ref3)=>{let{type,changes,altKey}=_ref3;switch(type){case downshift_esm.Kb.stateChangeTypes.ControlledPropUpdatedSelectedItem:return state;case downshift_esm.Kb.stateChangeTypes.FunctionSetHighlightedIndex:previousStateRef.current?.altKey&&(changes.highlightedIndex=-1);break;case downshift_esm.Kb.stateChangeTypes.FunctionCloseMenu:case downshift_esm.Kb.stateChangeTypes.InputBlur:return{...state,isOpen:type===downshift_esm.Kb.stateChangeTypes.InputBlur&&triggerContainsInput&&isMultiselectable&&state.isOpen||!1};case downshift_esm.Kb.stateChangeTypes.InputFocus:return{...state,isOpen:!1};case downshift_esm.Kb.stateChangeTypes.InputKeyDownArrowDown:case downshift_esm.Kb.stateChangeTypes.FunctionOpenMenu:state.isOpen===changes.isOpen||altKey||(changes.highlightedIndex=0);break;case downshift_esm.Kb.stateChangeTypes.InputKeyDownArrowUp:state.isOpen!==changes.isOpen&&(changes.highlightedIndex=values.length-1);break;case downshift_esm.Kb.stateChangeTypes.InputKeyDownEnter:case downshift_esm.Kb.stateChangeTypes.FunctionSelectItem:case downshift_esm.Kb.stateChangeTypes.ItemClick:changes.highlightedIndex=state.highlightedIndex,isMultiselectable&&(changes.isOpen=state.isOpen,changes.inputValue="");break;case downshift_esm.Kb.stateChangeTypes.InputKeyDownEscape:return{...state,isOpen:!1};case downshift_esm.Kb.stateChangeTypes.InputKeyDownPageDown:case downshift_esm.Kb.stateChangeTypes.InputKeyDownPageUp:return state}return isMultiselectable&&state.selectedItem!==changes.selectedItem&&(void 0!==state.selectedItem&&null!==state.selectedItem&&void 0!==changes.selectedItem&&null!==changes.selectedItem?state.selectedItem.includes(changes.selectedItem)?changes.selectedItem=state.selectedItem.filter((value=>value!==changes.selectedItem)):changes.selectedItem=[...state.selectedItem,changes.selectedItem]:void 0!==changes.selectedItem&&null!==changes.selectedItem?changes.selectedItem=[changes.selectedItem]:changes.selectedItem=[]),previousStateRef.current={type,altKey,...state},changes},environment:win}),closeListbox=(0,react.useCallback)((()=>{closeMenu(),onChange({type:toType(downshift_esm.Kb.stateChangeTypes.FunctionCloseMenu),isExpanded:!1})}),[closeMenu,onChange]),openListbox=(0,react.useCallback)((()=>{openMenu(),onChange({type:toType(downshift_esm.Kb.stateChangeTypes.FunctionOpenMenu),isExpanded:!0})}),[openMenu,onChange]),setActiveIndex=(0,react.useCallback)((index=>{setHighlightedIndex(index),onChange({type:toType(downshift_esm.Kb.stateChangeTypes.FunctionSetHighlightedIndex),activeIndex:index})}),[onChange,setHighlightedIndex]),setDownshiftSelection=(0,react.useCallback)((value=>{selectItem(value),onChange({type:toType(downshift_esm.Kb.stateChangeTypes.FunctionSelectItem),selectionValue:value})}),[onChange,selectItem]),{getLabelProps:getFieldLabelProps,getHintProps,getInputProps:getFieldInputProps,getMessageProps}=(0,useField.U)({idPrefix,hasHint,hasMessage});(0,react.useLayoutEffect)((()=>{if((isAutocomplete||!isEditable)&&_isExpanded&&!previousStateRef.current?.isOpen&&_selectionValue&&!matchValue){const value=Array.isArray(_selectionValue)?_selectionValue[_selectionValue.length-1]:_selectionValue,index=values.findIndex((current=>current===value));-1!==index?setActiveIndex(index):void 0!==_defaultActiveIndex&&setActiveIndex(_defaultActiveIndex)}}),[isAutocomplete,isEditable,_isExpanded,_selectionValue,_inputValue,values,_defaultActiveIndex,setActiveIndex]),(0,react.useEffect)((()=>setTriggerContainsInput(triggerRef.current?.contains(inputRef.current))),[triggerRef,inputRef]),(0,react.useEffect)((()=>(clearTimeout(matchTimeoutRef.current),matchTimeoutRef.current=window.setTimeout((()=>setMatchValue("")),500),()=>clearTimeout(matchTimeoutRef.current))),[matchValue]),(0,react.useEffect)((()=>{previousStateRef.current?.type===downshift_esm.Kb.stateChangeTypes.FunctionSelectItem&&(isEditable?inputRef.current?.focus():triggerRef.current?.focus(),previousStateRef.current={...previousStateRef.current,type:downshift_esm.Kb.stateChangeTypes.InputFocus})})),(0,react.useEffect)((()=>{isEditable&&inputRef.current===win.document.activeElement&&inputRef.current?.scrollIntoView&&inputRef.current?.scrollIntoView({block:"nearest"})}),[inputRef,isEditable,win.document.activeElement]);const getTriggerProps=(0,react.useCallback)((function(_temp){let{onBlur,onClick,onKeyDown,...other}=void 0===_temp?{}:_temp;const triggerProps=getDownshiftTriggerProps({"data-garden-container-id":"containers.combobox","data-garden-container-version":"storybook",onBlur,onClick,onKeyDown,ref:triggerRef,disabled,...other}),handleBlur=event=>{null!==event.relatedTarget&&event.currentTarget?.contains(event.relatedTarget)||closeListbox()};if(isEditable&&triggerContainsInput){const handleClick=event=>{disabled?event.preventDefault():isAutocomplete?triggerProps.onClick(event):inputRef.current?.focus()};return{...triggerProps,onBlur:(0,composeEventHandlers.M)(onBlur,handleBlur),onClick:(0,composeEventHandlers.M)(onClick,handleClick),"aria-controls":isAutocomplete?triggerProps["aria-controls"]:void 0,"aria-expanded":void 0,"aria-disabled":disabled||void 0,disabled:void 0}}if(!isEditable){const{"aria-activedescendant":ariaActiveDescendant,onKeyDown:onDownshiftKeyDown}=getDownshiftInputProps({},{suppressRefError:!0}),{"aria-labelledby":ariaLabeledBy}=getFieldInputProps(),handleKeyDown=event=>{if(event.stopPropagation(),_isExpanded||event.key!==KeyboardEventValues.t.SPACE&&event.key!==KeyboardEventValues.t.ENTER)if(!_isExpanded||matchValue||event.key!==KeyboardEventValues.t.SPACE&&event.key!==KeyboardEventValues.t.ENTER){if(/^(?:\S| ){1}$/u.test(event.key)){const _matchValue=`${matchValue}${event.key}`;setMatchValue(_matchValue);let offset=0;if(_isExpanded)-1!==_activeIndex&&(offset=1===_matchValue.length?_activeIndex+1:_activeIndex);else{openListbox();const offsetValue=Array.isArray(_selectionValue)?_selectionValue[_selectionValue.length-1]:_selectionValue;null!==offsetValue&&(offset=values.findIndex((current=>current===offsetValue)))}for(let index=0;index<values.length;index++){const valueIndex=(index+offset)%values.length,value=values[valueIndex];if(toLabel(labels,value).toLowerCase().startsWith(_matchValue.toLowerCase())){setActiveIndex(valueIndex);break}}}}else event.preventDefault(),-1!==_activeIndex&&setDownshiftSelection(values[_activeIndex]),isMultiselectable||closeListbox();else event.preventDefault(),openListbox()};return{...triggerProps,"aria-activedescendant":ariaActiveDescendant,"aria-haspopup":"listbox","aria-labelledby":ariaLabeledBy,"aria-disabled":disabled||void 0,disabled:void 0,role:"combobox",onBlur:(0,composeEventHandlers.M)(onBlur,handleBlur),onKeyDown:(0,composeEventHandlers.M)(onKeyDown,onDownshiftKeyDown,handleKeyDown),tabIndex:disabled?-1:0}}return triggerProps}),[getDownshiftTriggerProps,getDownshiftInputProps,getFieldInputProps,triggerRef,disabled,_selectionValue,_isExpanded,_activeIndex,closeListbox,openListbox,setActiveIndex,setDownshiftSelection,matchValue,values,labels,triggerContainsInput,isAutocomplete,isEditable,isMultiselectable,inputRef]),getLabelProps=(0,react.useCallback)((function(_temp2){let{onClick,...other}=void 0===_temp2?{}:_temp2;const{htmlFor,...labelProps}=getFieldLabelProps(other);return{...labelProps,onClick:(0,composeEventHandlers.M)(onClick,(()=>!isEditable&&triggerRef.current?.focus())),htmlFor:isEditable?htmlFor:void 0}}),[getFieldLabelProps,isEditable,triggerRef]),getInputProps=(0,react.useCallback)((function(_temp3){let{role=isEditable?"combobox":null,"aria-labelledby":ariaLabeledBy=null,onClick,onFocus,...other}=void 0===_temp3?{}:_temp3;const inputProps={"data-garden-container-id":"containers.combobox.input","data-garden-container-version":"storybook",ref:inputRef,role:null===role?void 0:role,onClick,onFocus};if(isEditable){const handleClick=event=>event.target instanceof Element&&triggerRef.current?.contains(event.target)&&event.stopPropagation();return getDownshiftInputProps({...inputProps,disabled,role,"aria-labelledby":ariaLabeledBy,"aria-autocomplete":isAutocomplete?"list":void 0,onClick:(0,composeEventHandlers.M)(onClick,handleClick),...getFieldInputProps(),...other})}return{...getDownshiftInputProps({...inputProps,disabled:!0,"aria-autocomplete":void 0,"aria-activedescendant":void 0,"aria-controls":void 0,"aria-expanded":void 0,"aria-hidden":!0,"aria-labelledby":void 0}),disabled,readOnly:!0,tabIndex:-1,onFocus:(0,composeEventHandlers.M)(onFocus,(()=>{isEditable||triggerRef.current?.focus()})),...other}}),[getDownshiftInputProps,getFieldInputProps,inputRef,triggerRef,disabled,isAutocomplete,isEditable]),getTagProps=(0,react.useCallback)((_ref4=>{let{option,onClick,onKeyDown,...other}=_ref4;return{"data-garden-container-id":"containers.combobox.tag","data-garden-container-version":"storybook",onClick:(0,composeEventHandlers.M)(onClick,(event=>event.target instanceof Element&&triggerRef.current?.contains(event.target)&&event.stopPropagation())),onKeyDown:(0,composeEventHandlers.M)(onKeyDown,(event=>{if(event.key===KeyboardEventValues.t.BACKSPACE||event.key===KeyboardEventValues.t.DELETE)setDownshiftSelection(option.value);else{const triggerContainsTag=event.target instanceof Element&&triggerRef.current?.contains(event.target);if(triggerContainsTag&&!isEditable&&event.stopPropagation(),triggerContainsTag&&(event.key===KeyboardEventValues.t.DOWN||event.key===KeyboardEventValues.t.UP||event.key===KeyboardEventValues.t.ESCAPE||!isEditable&&(event.key===KeyboardEventValues.t.ENTER||event.key===KeyboardEventValues.t.SPACE))){const inputProps=getDownshiftInputProps();isEditable?inputRef.current?.focus():(event.preventDefault(),triggerRef.current?.focus()),inputProps.onKeyDown(event)}}})),...other}}),[triggerRef,setDownshiftSelection,getDownshiftInputProps,isEditable,inputRef]),getListboxProps=(0,react.useCallback)((_ref5=>{let{role="listbox","aria-labelledby":ariaLabeledBy=null,...other}=_ref5;return getDownshiftListboxProps({"data-garden-container-id":"containers.combobox.listbox","data-garden-container-version":"storybook",ref:listboxRef,role,"aria-labelledby":ariaLabeledBy,"aria-multiselectable":!!isMultiselectable||void 0,...other})}),[getDownshiftListboxProps,listboxRef,isMultiselectable]),getOptGroupProps=(0,react.useCallback)((_ref6=>{let{role="group",...other}=_ref6;return{"data-garden-container-id":"containers.combobox.optgroup","data-garden-container-version":"storybook",role:null===role?void 0:role,...other}}),[]),getOptionProps=(0,react.useCallback)((function(_temp4){let{role="option",option,onMouseDown,...other}=void 0===_temp4?{}:_temp4;const optionProps={"data-garden-container-id":"containers.combobox.option","data-garden-container-version":"storybook",role,onMouseDown,...other};let ariaSelected=!1;if(void 0!==option?.value&&(ariaSelected=Array.isArray(_selectionValue)?_selectionValue?.includes(option?.value):_selectionValue===option?.value),void 0===option||option.disabled){const handleMouseDown=event=>event.preventDefault();return{"aria-disabled":!0,"aria-selected":ariaSelected,id:option?getOptionId(disabledValues.indexOf(option.value),option.disabled):void 0,...optionProps,onMouseDown:(0,composeEventHandlers.M)(onMouseDown,handleMouseDown)}}return getDownshiftOptionProps({item:option.value,index:values.indexOf(option.value),"aria-selected":ariaSelected,...optionProps})}),[getDownshiftOptionProps,disabledValues,values,_selectionValue,getOptionId]),removeSelection=(0,react.useCallback)((value=>{if(void 0===value)setDownshiftSelection(null);else{const removeValue="object"==typeof value&&"value"in value?value.value:value;Array.isArray(_selectionValue)&&_selectionValue.includes(removeValue)?setDownshiftSelection(removeValue):_selectionValue===removeValue&&setDownshiftSelection(null)}}),[_selectionValue,setDownshiftSelection]),selection=(0,react.useMemo)((()=>Array.isArray(_selectionValue)?_selectionValue.map((value=>({value,label:labels[value],disabled:disabledValues.includes(value)}))):_selectionValue?{value:_selectionValue,label:toLabel(labels,_selectionValue),disabled:disabledValues.includes(_selectionValue)}:null),[_selectionValue,disabledValues,labels]);return(0,react.useMemo)((()=>({getLabelProps,getHintProps,getTriggerProps,getInputProps,getTagProps,getListboxProps,getOptGroupProps,getOptionProps,getMessageProps,selection,isExpanded:_isExpanded,activeValue:values[_activeIndex],inputValue:_inputValue,removeSelection})),[values,selection,_isExpanded,_activeIndex,_inputValue,getLabelProps,getHintProps,getTriggerProps,getInputProps,getTagProps,getListboxProps,getOptGroupProps,getOptionProps,getMessageProps,removeSelection])};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ComboboxContainer=props=>{const{children,render=children,...options}=props;return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:render(useCombobox(options))})};ComboboxContainer.propTypes={children:prop_types_default().func,render:prop_types_default().func,idPrefix:prop_types_default().string,triggerRef:prop_types_default().any.isRequired,inputRef:prop_types_default().any.isRequired,listboxRef:prop_types_default().any.isRequired,isAutocomplete:prop_types_default().bool,isMultiselectable:prop_types_default().bool,isEditable:prop_types_default().bool,disabled:prop_types_default().bool,hasHint:prop_types_default().bool,hasMessage:prop_types_default().bool,options:prop_types_default().arrayOf(prop_types_default().any).isRequired,inputValue:prop_types_default().string,selectionValue:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().arrayOf(prop_types_default().string)]),isExpanded:prop_types_default().bool,defaultExpanded:prop_types_default().bool,initialExpanded:prop_types_default().bool,activeIndex:prop_types_default().number,defaultActiveIndex:prop_types_default().number,initialActiveIndex:prop_types_default().number,onChange:prop_types_default().func,environment:prop_types_default().any},ComboboxContainer.defaultProps={isEditable:!0};try{ComboboxContainer.displayName="ComboboxContainer",ComboboxContainer.__docgenInfo={description:"",displayName:"ComboboxContainer",props:{render:{defaultValue:null,description:"Provides combobox render prop functions, state, and actions\n@param options.getLabelProps Label props getter\n@param options.getHintProps Hint props getter\n@param options.getTriggerProps Trigger props getter\n@param options.getInputProps Input props getter\n@param options.getTagProps Tag (multiselectable value) props getter\n@param options.getListboxProps Listbox props getter\n@param options.getOptGroupProps Option group props getter\n@param options.getOptionProps Option props getter\n@param options.getMessageProps Message props getter\n@param options.isExpanded Current listbox expansion\n@param options.activeValue Current active option value\n@param options.selection Current selection\n@param options.inputValue Current input value\n@param options.removeSelection Remove the specified selection value or all values if unspecified",name:"render",required:!1,type:{name:"((options: { getLabelProps: <T extends Element>(props?: HTMLProps<T>) => HTMLProps<T>; getHintProps: <T extends Element>(props?: HTMLProps<T>) => HTMLProps<...>; ... 11 more ...; removeSelection: (value?: ISelectedOption | ... 1 more ... | undefined) => void; }) => ReactNode) | undefined"}},children:{defaultValue:null,description:"@ignore",name:"children",required:!1,type:{name:"(((options: IUseComboboxReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},idPrefix:{defaultValue:null,description:"Prefixes IDs for the combobox",name:"idPrefix",required:!1,type:{name:"string"}},triggerRef:{defaultValue:null,description:"Provides ref access to the underlying trigger element",name:"triggerRef",required:!0,type:{name:"RefObject<HTMLElement>"}},inputRef:{defaultValue:null,description:"Provides ref access to the underlying input element",name:"inputRef",required:!0,type:{name:"RefObject<HTMLInputElement>"}},listboxRef:{defaultValue:null,description:"Provides ref access to the underlying listbox element",name:"listboxRef",required:!0,type:{name:"RefObject<HTMLElement>"}},isAutocomplete:{defaultValue:null,description:"Indicates that the combobox provides autocompletion",name:"isAutocomplete",required:!1,type:{name:"boolean"}},isMultiselectable:{defaultValue:null,description:"Determines whether multiple option values can be selected",name:"isMultiselectable",required:!1,type:{name:"boolean"}},isEditable:{defaultValue:{value:"true"},description:"Determines whether the combobox is editable or select-only",name:"isEditable",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Indicates that the element is not interactive",name:"disabled",required:!1,type:{name:"boolean"}},hasHint:{defaultValue:null,description:"Indicates the combobox has a hint",name:"hasHint",required:!1,type:{name:"boolean"}},hasMessage:{defaultValue:null,description:"Indicates the combobox has a message",name:"hasMessage",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Provides an ordered list of option groups and options\n@param option.value Unique option value\n@param option.label Optional human-readable text (defaults to `option.value`)\n@param option.selected Sets initial selection for the option\n@param option.disabled Indicates that the option is not interactive\n@param option.options Groups a list of options",name:"options",required:!0,type:{name:"(IOption | { options: IOption[]; label?: string | undefined; })[]"}},inputValue:{defaultValue:null,description:"Sets the input value in a controlled combobox",name:"inputValue",required:!1,type:{name:"string"}},selectionValue:{defaultValue:null,description:"Sets the selection value (or `isMultiselectable` values) in a controlled combobox",name:"selectionValue",required:!1,type:{name:"OptionValue | OptionValue[] | null"}},isExpanded:{defaultValue:null,description:"Determines listbox expansion in a controlled combobox",name:"isExpanded",required:!1,type:{name:"boolean"}},defaultExpanded:{defaultValue:null,description:"Determines default listbox expansion in an uncontrolled combobox",name:"defaultExpanded",required:!1,type:{name:"boolean"}},initialExpanded:{defaultValue:null,description:"Determines listbox expansion on combobox initialization",name:"initialExpanded",required:!1,type:{name:"boolean"}},activeIndex:{defaultValue:null,description:"Sets the currently active option index in a controlled combobox",name:"activeIndex",required:!1,type:{name:"number"}},defaultActiveIndex:{defaultValue:null,description:"Sets the default active option index in an uncontrolled combobox",name:"defaultActiveIndex",required:!1,type:{name:"number"}},initialActiveIndex:{defaultValue:null,description:"Sets the active option index on combobox initialization",name:"initialActiveIndex",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Handles combobox state changes\n@param changes.type The event type that triggered the change\n@param changes.isExpanded The updated listbox expansion\n@param changes.selectionValue The updated selection value(s)\n@param changes.inputValue The updated input value\n@param changes.activeIndex The updated active option index",name:"onChange",required:!1,type:{name:"((changes: { type: string; isExpanded?: boolean; selectionValue?: OptionValue | OptionValue[] | null; inputValue?: string | undefined; activeIndex?: number | undefined; }) => void) | undefined"}},environment:{defaultValue:null,description:"Sets the environment where the combobox is rendered",name:"environment",required:!1,type:{name:"Window"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/combobox/src/ComboboxContainer.tsx#ComboboxContainer"]={docgenInfo:ComboboxContainer.__docgenInfo,name:"ComboboxContainer",path:"packages/combobox/src/ComboboxContainer.tsx#ComboboxContainer"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./node_modules/@storybook/react/dist/index.mjs");var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),useGrid=__webpack_require__("./packages/grid/src/useGrid.ts");const ComboboxStory_toString=option=>option.label||("string"==typeof option.value?option.value:JSON.stringify(option.value)),Option=_ref=>{let{option,isGrouped,activeValue,selection,getOptionProps}=_ref;return(0,jsx_runtime.jsxs)("li",{className:classnames_default()({"pl-2":isGrouped,"bg-blue-100":option.value===activeValue,"cursor-default":option.disabled,"cursor-pointer":!option.disabled,"text-grey-400":option.disabled}),...getOptionProps({option}),children:[(Array.isArray(selection)?void 0!==selection.find((value=>value.value===option.value)):selection&&selection.value===option.value)&&"✓ ",ComboboxStory_toString(option)]})};Option.displayName="Option",Option.displayName="Option";const Tags=_ref2=>{let{selection,getTagProps}=_ref2;const{getGridProps,getGridCellProps}=(0,useGrid.N)({matrix:Array.isArray(selection)?[selection.filter((value=>!value.disabled))]:[[]]});return(0,jsx_runtime.jsx)("table",{className:"inline align-top",...getGridProps({"aria-label":"Tag values"}),children:(0,jsx_runtime.jsx)("tbody",{className:"inline",children:(0,jsx_runtime.jsx)("tr",{className:"inline",children:Array.isArray(selection)&&selection.map(((option,index)=>{const tagProps=getTagProps({option,"aria-label":"Press delete or backspace to remove"}),previousDisabledOptions=selection.filter(((_option,_index)=>_option.disabled&&_index<index)),{role,...props}=option.disabled?tagProps:getGridCellProps({rowIndex:0,colIndex:index-previousDisabledOptions.length,...{...tagProps,role:void 0}});return(0,jsx_runtime.jsx)("td",{role,className:"inline",children:(0,jsx_runtime.jsx)("button",{className:"mr-1 px-1",disabled:option.disabled,...props,type:"button",children:ComboboxStory_toString(option)})},index)}))})})})};Tags.displayName="Tags";const Component=_ref3=>{let{layout,isAutocomplete,isEditable,isMultiselectable,isExpanded,disabled,hasHint,hasMessage,activeValue,selection,getLabelProps,getHintProps,getTriggerProps,getInputProps,getTagProps,getListboxProps,getOptGroupProps,getOptionProps,getMessageProps,options}=_ref3;return(0,jsx_runtime.jsxs)("div",{className:"relative",children:[(0,jsx_runtime.jsx)("label",{...getLabelProps(),children:"Label"}),hasHint&&(0,jsx_runtime.jsx)("div",{...getHintProps(),children:"Hint"}),"Garden"===layout&&(0,jsx_runtime.jsxs)("div",{className:classnames_default()("border","border-solid","p-1",{"cursor-default":disabled,"cursor-pointer":!disabled&&(isAutocomplete||!isEditable),"cursor-text":!(disabled||isAutocomplete)&&isEditable,"bg-grey-100":disabled,"border-grey-200":disabled}),...getTriggerProps(),children:[isMultiselectable&&(0,jsx_runtime.jsx)(Tags,{selection,getTagProps}),(0,jsx_runtime.jsx)("input",{className:classnames_default()("border-none","bg-transparent",{"cursor-pointer":!(disabled||isEditable)}),...getInputProps()}),(isAutocomplete||!isEditable)&&(0,jsx_runtime.jsx)("button",{className:classnames_default()("ml-1","px-1",{"cursor-default":disabled}),disabled,tabIndex:-1,type:"button",children:"▼"})]}),"Downshift"===layout&&(0,jsx_runtime.jsxs)("div",{...!isEditable&&getTriggerProps(),children:[isMultiselectable&&(0,jsx_runtime.jsx)(Tags,{selection,getTagProps}),(0,jsx_runtime.jsx)("input",{className:classnames_default()({"cursor-pointer":!(disabled||isEditable)}),...getInputProps()}),isAutocomplete&&isEditable&&(0,jsx_runtime.jsx)("button",{className:"ml-1 px-1",...getTriggerProps({"aria-label":"Options"}),type:"button",children:"▼"})]}),hasMessage&&(0,jsx_runtime.jsx)("div",{...getMessageProps(),children:"Message"}),(0,jsx_runtime.jsx)("ul",{className:classnames_default()("mt-1","border","border-solid","absolute","w-full",{invisible:!isExpanded}),...getListboxProps({"aria-label":"Options"}),children:0===options.length?(0,jsx_runtime.jsx)("li",{className:"text-grey-400",...getOptionProps({"aria-disabled":!0}),children:"No matches found"}):options.map(((option,index)=>"options"in option?(0,jsx_runtime.jsxs)("li",{role:"none",className:"cursor-default",onMouseDown:event=>event.preventDefault(),children:[option.label&&(0,jsx_runtime.jsx)("b",{className:"block mt-1",children:option.label}),(0,jsx_runtime.jsx)("hr",{"aria-hidden":"true",className:"my-1 border-grey-200"}),(0,jsx_runtime.jsx)("ul",{...getOptGroupProps({"aria-label":option.label||"group"}),children:option.options.map(((groupOption,groupIndex)=>(0,jsx_runtime.jsx)(Option,{option:groupOption,isGrouped:!0,activeValue,selection,getOptionProps},`${index}.${groupIndex}`)))})]},index):(0,jsx_runtime.jsx)(Option,{option,activeValue,selection,getOptionProps},index)))})]})};Component.displayName="Component",Component.displayName="Component";const Container=props=>(0,jsx_runtime.jsx)(ComboboxContainer,{...props,children:containerProps=>(0,jsx_runtime.jsx)(Component,{...props,...containerProps})});Container.displayName="Container";const Hook=props=>{const hookProps=useCombobox(props);return(0,jsx_runtime.jsx)(Component,{...props,...hookProps})};Hook.displayName="Hook";const ComboboxStory=_ref4=>{let{as,...props}=_ref4;const triggerRef=(0,react.createRef)(),inputRef=(0,react.createRef)(),listboxRef=(0,react.createRef)(),[options,setOptions]=(0,react.useState)(props.options),onChange=changes=>{if(props.isAutocomplete&&props.isEditable&&void 0!==changes.inputValue){const value=changes.inputValue;if(""===value)setOptions(props.options);else{const _options=[];props.options.forEach((option=>{"options"in option?_options.push(...option.options):_options.push(option)}));const regex=new RegExp(value.replace(/[.*+?^${}()|[\]\\]/giu,"\\$&"),"gui");setOptions(_options.filter((option=>ComboboxStory_toString(option).match(regex))))}}};return"container"===as?(0,jsx_runtime.jsx)(Container,{...props,triggerRef,inputRef,listboxRef,options,onChange:(0,composeEventHandlers.M)(onChange,props.onChange)}):(0,jsx_runtime.jsx)(Hook,{...props,triggerRef,inputRef,listboxRef,options,onChange:(0,composeEventHandlers.M)(onChange,props.onChange)})},OPTIONS=[{label:"Fruits",options:[{value:"fruit-01",label:"Apple"},{value:"fruit-02",label:"Banana",disabled:!0},{value:"fruit-03",label:"Cherry"},{value:"fruit-04",label:"Grape"},{value:"fruit-05",label:"Kiwi"}]},{label:"Vegetables",options:[{value:"vegetable-01",label:"Asparagus"},{value:"vegetable-02",label:"Broccoli",disabled:!0},{value:"vegetable-03",label:"Brussel sprouts"},{value:"vegetable-04",label:"Cauliflower"},{value:"vegetable-07",label:"Kale"}]}],README_namespaceObject="# @zendeskgarden/container-combobox [![npm version][npm version badge]][npm version link]\n\n[npm version badge]: https://flat.badgen.net/npm/v/@zendeskgarden/container-combobox\n[npm version link]: https://www.npmjs.com/package/@zendeskgarden/container-combobox\n\nThis package includes containers relating to Combobox in the\n[Garden Design System](https://zendeskgarden.github.io/).\n\n## Installation\n\n```sh\nnpm install @zendeskgarden/container-combobox\n```\n\n## Features\n\nThe combobox container encapsulates complexity while supporting a wide variety of\nstandard features. Core logic and events are backed by Downshift. Standard\nnaming and behaviors are finessed to suit Garden's point of view.\n\n- single and multiple option selection\n- non-editable select-only (similar to a native HTML `<select>`)\n- autocomplete (on by default) with user-provided option filtering\n- support for trigger as input parent (Garden layout) vs. trigger as input\n  sibling (Downshift layout)\n\n## Usage\n\nCheck out [storybook](https://zendeskgarden.github.io/react-containers) for live examples.\n\n### useCombobox\n\n```jsx\nimport { useCombobox } from '@zendeskgarden/container-combobox';\n\nconst Combobox = () => {\n  const triggerRef = createRef();\n  const inputRef = createRef();\n  const listboxRef = createRef();\n  const options = [\n    { value: 'value-1', label: 'One' },\n    { value: 'value-2', label: 'Two' },\n    { value: 'value-3', label: 'Three' }\n  ];\n  const {\n    getLabelProps,\n    getInputProps,\n    getTriggerProps,\n    getListboxProps,\n    getOptionProps,\n    isExpanded\n  } = useCombobox({\n    triggerRef,\n    inputRef,\n    listboxRef,\n    options\n  });\n\n  return (\n    <>\n      <label {...getLabelProps()}>Label</label>\n      <input {...getInputProps()} />\n      <button {...getTriggerProps()}>&#9660;</button>\n      <ul\n        {...getListboxProps({ 'aria-label': 'Options' })}\n        style={{ visibility: isExpanded ? 'visible' : 'hidden' }}\n      >\n        {options.map((option, index) => (\n          <li key={index} {...getOptionProps({ option })}>\n            {option.label}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n```\n\n### ComboboxContainer\n\n```jsx\nimport { ComboboxContainer } from '@zendeskgarden/container-combobox';\n\nconst Combobox = () => {\n  const triggerRef = createRef();\n  const inputRef = createRef();\n  const listboxRef = createRef();\n  const options = [\n    { value: 'value-1', label: 'One' },\n    { value: 'value-2', label: 'Two' },\n    { value: 'value-3', label: 'Three' }\n  ];\n\n  return (\n    <ComboboxContainer\n      triggerRef={triggerRef}\n      inputRef={inputRef}\n      listboxRef={listboxRef}\n      options={options}\n    >\n      {({\n        getLabelProps,\n        getInputProps,\n        getTriggerProps,\n        getListboxProps,\n        getOptionProps,\n        isExpanded\n      }) => (\n        <>\n          <label {...getLabelProps()}>Label</label>\n          <input {...getInputProps()} />\n          <button {...getTriggerProps()}>&#9660;</button>\n          <ul\n            {...getListboxProps({ 'aria-label': 'Options' })}\n            style={{ visibility: isExpanded ? 'visible' : 'hidden' }}\n          >\n            {options.map((option, index) => (\n              <li key={index} {...getOptionProps({ option })}>\n                {option.label}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </ComboboxContainer>\n  );\n};\n```\n";function _createMdxContent(props){const _components=Object.assign({h1:"h1",h2:"h2"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Packages/Combobox",component:ComboboxContainer,args:{as:"hook",layout:"Garden",isEditable:!0,options:OPTIONS},argTypes:{as:{options:["container","hook"],control:"radio",table:{category:"Story"}},layout:{options:["Downshift","Garden"],control:"radio",table:{category:"Story"}},inputRef:{control:!1},listboxRef:{control:!1},triggerRef:{control:!1}}}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"api",children:"API"}),"\n",(0,jsx_runtime.jsx)(dist.$4,{}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"demo",children:"Demo"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"uncontrolled",children:"Uncontrolled"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Uncontrolled",argTypes:{isExpanded:{control:!1},inputValue:{control:!1},activeIndex:{control:!1},selectionValue:{control:!1}},children:args=>(0,jsx_runtime.jsx)(ComboboxStory,{...args})})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"controlled",children:"Controlled"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Controlled",args:{isExpanded:!1,inputValue:"",activeIndex:-1,selectionValue:null},argTypes:{defaultExpanded:{control:!1},defaultSelectionValue:{control:!1}},children:args=>{const updateArgs=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)()[1];return(0,jsx_runtime.jsx)(ComboboxStory,{...args,onChange:changes=>{const{type,...args}=changes;updateArgs(args)}})}})}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:README_namespaceObject})]})}const uncontrolled=args=>(0,jsx_runtime.jsx)(ComboboxStory,{...args});uncontrolled.storyName="Uncontrolled",uncontrolled.argTypes={isExpanded:{control:!1},inputValue:{control:!1},activeIndex:{control:!1},selectionValue:{control:!1}},uncontrolled.parameters={storySource:{source:"args => <ComboboxStory {...args} />"}};const controlled=args=>{const updateArgs=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)()[1];return(0,jsx_runtime.jsx)(ComboboxStory,{...args,onChange:changes=>{const{type,...args}=changes;updateArgs(args)}})};controlled.storyName="Controlled",controlled.argTypes={defaultExpanded:{control:!1},defaultSelectionValue:{control:!1}},controlled.args={isExpanded:!1,inputValue:"",activeIndex:-1,selectionValue:null},controlled.parameters={storySource:{source:"args => {\n  const updateArgs = useArgs()[1];\n  const handleChange = changes => {\n    const {\n      type,\n      ...args\n    } = changes;\n    updateArgs(args);\n  };\n  return <ComboboxStory {...args} onChange={handleChange} />;\n}"}};const componentMeta={title:"Packages/Combobox",component:ComboboxContainer,args:{as:"hook",layout:"Garden",isEditable:!0,options:OPTIONS},argTypes:{as:{options:["container","hook"],control:"radio",table:{category:"Story"}},layout:{options:["Downshift","Garden"],control:"radio",table:{category:"Story"}},inputRef:{control:!1},listboxRef:{control:!1},triggerRef:{control:!1}},tags:["stories-mdx"],includeStories:["uncontrolled","controlled"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const combobox_stories=componentMeta}}]);