"use strict";(self.webpackChunk_zendeskgarden_react_containers=self.webpackChunk_zendeskgarden_react_containers||[]).push([[4542],{"./packages/menu/src/useMenu.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>useMenu});var react=__webpack_require__("./node_modules/react/index.js"),useSelection=__webpack_require__("./packages/selection/src/useSelection.ts"),useId=__webpack_require__("./packages/utilities/src/utils/useId.ts"),getControlledValue=__webpack_require__("./packages/utilities/src/utils/getControlledValue.ts"),KeyboardEventValues=__webpack_require__("./packages/utilities/src/utils/KeyboardEventValues.ts"),composeEventHandlers=__webpack_require__("./packages/utilities/src/utils/composeEventHandlers.ts");const StateChangeTypes={FnSetStateRefs:"fn:setStateRefs",FnMenuTransitionFinish:"fn:menuTransitionFinish",TriggerClick:"trigger:click",TriggerKeyDownEnter:`trigger:keyDown:${KeyboardEventValues.R.ENTER}`,TriggerKeyDownSpace:"trigger:keyDown:Space",TriggerKeyDownArrowDown:`trigger:keyDown:${KeyboardEventValues.R.DOWN}`,TriggerKeyDownArrowUp:`trigger:keyDown:${KeyboardEventValues.R.UP}`,MenuKeyDownEscape:`menu:keyDown:${KeyboardEventValues.R.ESCAPE}`,MenuKeyDownTab:`menu:keyDown:${KeyboardEventValues.R.TAB}`,MenuBlur:"menu:blur",MenuMouseLeave:"menu:mouseLeave",MenuItemClick:"menuItem:click",MenuItemClickPrevious:"menuItem:click:previous",MenuItemClickNext:"menuItem:click:next",MenuItemMouseMove:"menuItem:mouseMove",MenuItemKeyDown:"menuItem:keyDown",MenuItemKeyDownPrevious:"menuItem:keyDown:previous",MenuItemKeyDownNext:"menuItem:keyDown:next",MenuItemKeyDownEnter:`menuItem:keyDown:${KeyboardEventValues.R.ENTER}`,MenuItemKeyDownSpace:"menuItem:keyDown:Space",MenuItemKeyDownArrowUp:`menuItem:keyDown:${KeyboardEventValues.R.UP}`,MenuItemKeyDownArrowDown:`menuItem:keyDown:${KeyboardEventValues.R.DOWN}`,MenuItemKeyDownHome:`menuItem:keyDown:${KeyboardEventValues.R.HOME}`,MenuItemKeyDownEnd:`menuItem:keyDown:${KeyboardEventValues.R.END}`},isItemGroup=item=>Object.hasOwn(item,"items"),isValidItem=item=>!item.disabled&&!item.separator&&!isItemGroup(item),toMenuItemKeyDownType=type=>`MenuItemKeyDown${type===KeyboardEventValues.R.SPACE?"Space":type}`,getStateChanges=changes=>{let retVal=null;for(const change in changes)void 0!==changes[change]&&(retVal||={},retVal[change]=changes[change]);return retVal},stateReducer=(state,action)=>{let changes=null;switch(state.focusOnOpen&&(changes={...state,focusOnOpen:!1}),action.type){case StateChangeTypes.MenuBlur:case StateChangeTypes.MenuKeyDownEscape:case StateChangeTypes.MenuKeyDownTab:case StateChangeTypes.TriggerClick:case StateChangeTypes.TriggerKeyDownEnter:case StateChangeTypes.TriggerKeyDownSpace:case StateChangeTypes.TriggerKeyDownArrowDown:case StateChangeTypes.TriggerKeyDownArrowUp:{const{focusOnOpen,focusedValue,isExpanded}=action.payload,stateChanges=getStateChanges({focusOnOpen,focusedValue,isExpanded});stateChanges&&(changes={...changes||state,...stateChanges});break}case StateChangeTypes.MenuItemClick:case StateChangeTypes.MenuItemClickNext:case StateChangeTypes.MenuItemClickPrevious:case StateChangeTypes.MenuItemKeyDownSpace:case StateChangeTypes.MenuItemKeyDownEnter:{const{selectedItems,isExpanded,nestedPathIds,transitionType,isTransitionNext,isTransitionPrevious}=action.payload,stateChanges=getStateChanges({selectedItems,isExpanded,nestedPathIds,transitionType,isTransitionNext,isTransitionPrevious});stateChanges&&(changes={...changes||state,...stateChanges});break}case StateChangeTypes.MenuItemKeyDownArrowUp:case StateChangeTypes.MenuItemKeyDownArrowDown:case StateChangeTypes.MenuItemKeyDownNext:case StateChangeTypes.MenuItemKeyDownPrevious:case StateChangeTypes.MenuItemKeyDownHome:case StateChangeTypes.MenuItemKeyDownEnd:case StateChangeTypes.MenuItemKeyDown:case StateChangeTypes.MenuItemMouseMove:{const{focusedValue,nestedPathIds,transitionType,isTransitionNext,isTransitionPrevious}=action.payload,stateChanges=getStateChanges({focusedValue,nestedPathIds,transitionType,isTransitionNext,isTransitionPrevious});stateChanges&&(changes={...changes||state,...stateChanges});break}case StateChangeTypes.FnMenuTransitionFinish:{const{focusOnOpen,focusedValue,nestedPathIds,valuesRef}=action.payload,stateChanges=getStateChanges({focusOnOpen,focusedValue,nestedPathIds,valuesRef});stateChanges&&(changes={...changes||state,...stateChanges,transitionType:null,isTransitionNext:!1,isTransitionPrevious:!1});break}case StateChangeTypes.FnSetStateRefs:{const{...props}=action.payload;changes={...changes||state,...props};break}default:throw new Error("Error: unexpected menu action provided: ",action.type)}return changes||state},useMenu=_ref=>{let{items:rawItems,idPrefix,environment,menuRef,triggerRef,rtl=!1,onChange=()=>{},isExpanded,defaultExpanded=!1,restoreFocus=!0,selectedItems,focusedValue,defaultFocusedValue}=_ref;const triggerId=`${`${(0,useId.B)(idPrefix)}-`}menu-trigger`,isExpandedControlled=void 0!==isExpanded,isSelectedItemsControlled=void 0!==selectedItems,isFocusedValueControlled=void 0!==focusedValue,menuItems=(0,react.useMemo)((()=>rawItems.reduce(((items,item)=>(isItemGroup(item)?items.push(...item.items.filter(isValidItem)):isValidItem(item)&&items.push(item),items)),[])),[rawItems]),initialSelectedItems=(0,react.useMemo)((()=>menuItems.filter((item=>!!(item.type&&["radio","checkbox"].includes(item.type)&&item.selected)))),[menuItems]),values=(0,react.useMemo)((()=>menuItems.map((item=>item.value))),[menuItems]),itemRefs=(0,react.useMemo)((()=>values.reduce(((acc,v)=>(acc[v]=(0,react.createRef)(),acc)),{})),[values]),[menuVisible,setMenuVisible]=(0,react.useState)(!1),[state,dispatch]=(0,react.useReducer)(stateReducer,{focusedValue,isExpanded:isExpanded||defaultExpanded,selectedItems:initialSelectedItems,valuesRef:values,focusOnOpen:!1,isTransitionNext:!1,isTransitionPrevious:!1,transitionType:null,nestedPathIds:[]}),controlledIsExpanded=(0,getControlledValue.o)(isExpanded,state.isExpanded),controlledSelectedItems=(0,getControlledValue.o)(selectedItems,state.selectedItems),uncontrolledFocusedValue=null===state.focusedValue?void 0:state.focusedValue,{focusedValue:controlledFocusedValue,getGroupProps,getElementProps}=(0,useSelection.C)({values,direction:"vertical",selectedValue:focusedValue||uncontrolledFocusedValue,focusedValue:focusedValue||uncontrolledFocusedValue,allowDefaultOnSelect:!0}),returnFocusToTrigger=(0,react.useCallback)((skip=>{!skip&&restoreFocus&&triggerRef.current&&triggerRef.current.focus()}),[triggerRef,restoreFocus]),closeMenu=(0,react.useCallback)((changeType=>{dispatch({type:changeType,payload:{...!isExpandedControlled&&{isExpanded:!1}}}),onChange({type:changeType,isExpanded:!1})}),[onChange,isExpandedControlled]),isItemSelected=(0,react.useCallback)(((value,type,name)=>{let isSelected;if("checkbox"===type)isSelected=!!controlledSelectedItems.find((item=>item.value===value));else if("radio"===type){const match=controlledSelectedItems.filter((item=>item.name===name))[0];isSelected=match?.value===value}return isSelected}),[controlledSelectedItems]),getNextFocusedValue=(0,react.useCallback)((_ref2=>{let{value,key,isAlphanumericChar}=_ref2,nextFocusedValue=value;if(isAlphanumericChar){const firstChars=menuItems.map((item=>item.label?item.label[0].toLowerCase():String(item.value)[0].toLowerCase())),index=firstChars.indexOf(key),item=menuItems[index];item&&(nextFocusedValue=item.value)}else{const index=values.indexOf(value);let nextIndex;key===KeyboardEventValues.R.UP?nextIndex=(0===index?values.length:index)-1:key===KeyboardEventValues.R.DOWN?nextIndex=(index===values.length-1?-1:index)+1:key===KeyboardEventValues.R.END?nextIndex=values.length-1:key===KeyboardEventValues.R.HOME&&(nextIndex=0);nextFocusedValue=menuItems[nextIndex].value}return nextFocusedValue}),[menuItems,values]),getSelectedItems=(0,react.useCallback)((_ref3=>{let{value,type,name,label,selected}=_ref3,changes=[...controlledSelectedItems];if(!type)return null;const selectedItem={value,type,label,...name&&{name}};if("checkbox"===type)selected?changes=changes.filter((item=>item.value!==value)):changes.push(selectedItem);else if("radio"===type){const index=changes.findIndex((item=>item.name===name));index>-1&&changes.splice(index,1),changes.push(selectedItem)}return changes}),[controlledSelectedItems]),handleTriggerClick=(0,react.useCallback)((event=>{event.stopPropagation();const changeType=StateChangeTypes.TriggerClick;dispatch({type:changeType,payload:{...!isFocusedValueControlled&&{focusedValue:null},...!isExpandedControlled&&{isExpanded:!controlledIsExpanded}}}),returnFocusToTrigger(!controlledIsExpanded),onChange({type:changeType,focusedValue:null,isExpanded:!controlledIsExpanded})}),[isFocusedValueControlled,isExpandedControlled,controlledIsExpanded,returnFocusToTrigger,onChange]),handleTriggerKeyDown=(0,react.useCallback)((event=>{const{key}=event,isArrowKey=[KeyboardEventValues.R.DOWN,KeyboardEventValues.R.UP].includes(key),isSelectKey=[KeyboardEventValues.R.ENTER,KeyboardEventValues.R.SPACE].includes(key);let changeType,nextFocusedValue;isArrowKey?(changeType=StateChangeTypes[`TriggerKeyDown${key}`],nextFocusedValue=KeyboardEventValues.R.UP===key?values[values.length-1]:values[0]):isSelectKey&&(changeType=StateChangeTypes[`TriggerKeyDown${key===KeyboardEventValues.R.SPACE?"Space":key}`],nextFocusedValue=values[0]),changeType&&(event.preventDefault(),dispatch({type:changeType,payload:{focusOnOpen:!0,...!isFocusedValueControlled&&{focusedValue:defaultFocusedValue||nextFocusedValue},...!isExpandedControlled&&{isExpanded:!0}}}),returnFocusToTrigger(),onChange({type:changeType,focusedValue:defaultFocusedValue||nextFocusedValue,isExpanded:!0}))}),[values,isFocusedValueControlled,defaultFocusedValue,isExpandedControlled,returnFocusToTrigger,onChange]),handleMenuKeyDown=(0,react.useCallback)((event=>{const{key}=event;if([KeyboardEventValues.R.ESCAPE,KeyboardEventValues.R.TAB].includes(key)){event.preventDefault(),event.stopPropagation();const type=StateChangeTypes[key===KeyboardEventValues.R.ESCAPE?"MenuKeyDownEscape":"MenuKeyDownTab"];returnFocusToTrigger(),closeMenu(type)}}),[closeMenu,returnFocusToTrigger]),handleMenuBlur=(0,react.useCallback)((event=>{const path=event.composedPath();path.includes(menuRef.current)||path.includes(triggerRef.current)||(returnFocusToTrigger(),closeMenu(StateChangeTypes.MenuBlur))}),[closeMenu,menuRef,returnFocusToTrigger,triggerRef]),handleMenuMouseLeave=(0,react.useCallback)((()=>{onChange({type:StateChangeTypes.MenuMouseLeave})}),[onChange]),handleItemClick=(0,react.useCallback)((item=>{let changeType=StateChangeTypes.MenuItemClick;const{isNext,isPrevious}=item,isTransitionItem=isNext||isPrevious;isNext?changeType=StateChangeTypes.MenuItemClickNext:isPrevious&&(changeType=StateChangeTypes.MenuItemClickPrevious);const nextSelection=getSelectedItems(item);dispatch({type:changeType,payload:{...isTransitionItem&&{...isNext&&{nestedPathIds:[...state.nestedPathIds,item.value]},transitionType:changeType,isTransitionNext:isNext,isTransitionPrevious:isPrevious},...!isExpandedControlled&&!isTransitionItem&&{isExpanded:!1},...!isTransitionItem&&{nestedPathIds:[]},...!isSelectedItemsControlled&&nextSelection&&{selectedItems:nextSelection}}}),returnFocusToTrigger(isTransitionItem),onChange({type:changeType,value:item.value,...!isTransitionItem&&{isExpanded:!1},...nextSelection&&{selectedItems:nextSelection}})}),[getSelectedItems,state.nestedPathIds,isExpandedControlled,isSelectedItemsControlled,returnFocusToTrigger,onChange]),handleItemKeyDown=(0,react.useCallback)(((event,item)=>{const{key}=event,{isNext,isPrevious}=item,isJumpKey=[KeyboardEventValues.R.HOME,KeyboardEventValues.R.END].includes(key),isSelectKey=[KeyboardEventValues.R.SPACE,KeyboardEventValues.R.ENTER].includes(key),isVerticalArrowKeys=[KeyboardEventValues.R.UP,KeyboardEventValues.R.DOWN].includes(key),isAlphanumericChar=1===key.length&&/\S/u.test(key),isTransitionItem=isNext||isPrevious;let changeType,payload={},changes={};if(isSelectKey){changeType=StateChangeTypes[toMenuItemKeyDownType(key)];const nextSelection=getSelectedItems(item);isNext?changeType=StateChangeTypes.MenuItemKeyDownNext:isPrevious&&(changeType=StateChangeTypes.MenuItemKeyDownPrevious),payload={...!isExpandedControlled&&!isTransitionItem&&{isExpanded:!1},...!isTransitionItem&&{nestedPathIds:[]},...!isSelectedItemsControlled&&nextSelection&&{selectedItems:nextSelection}},changes={value:item.value,...!isTransitionItem&&{isExpanded:!1},...nextSelection&&{selectedItems:nextSelection}},event.preventDefault(),item.href&&((element,view)=>{const event=new MouseEvent("click",{bubbles:!0,cancelable:!0,view});element.dispatchEvent(event)})(event.target,environment||window),returnFocusToTrigger(isTransitionItem)}else if(key===KeyboardEventValues.R.RIGHT)rtl&&isPrevious&&(changeType=StateChangeTypes.MenuItemKeyDownPrevious),!rtl&&isNext&&(changeType=StateChangeTypes.MenuItemKeyDownNext),changeType&&(event.preventDefault(),changes={value:item.value});else if(key===KeyboardEventValues.R.LEFT)rtl&&isNext&&(changeType=StateChangeTypes.MenuItemKeyDownNext),!rtl&&isPrevious&&(changeType=StateChangeTypes.MenuItemKeyDownPrevious),changeType&&(event.preventDefault(),changes={value:item.value});else if(isVerticalArrowKeys||isJumpKey||isAlphanumericChar){event.preventDefault(),changeType=isAlphanumericChar?StateChangeTypes.MenuItemKeyDown:StateChangeTypes[toMenuItemKeyDownType(key)];const nextFocusedValue=getNextFocusedValue({value:item.value,key,isAlphanumericChar});payload={...!isFocusedValueControlled&&{focusedValue:nextFocusedValue}},changes={focusedValue:nextFocusedValue}}if(changeType){event.stopPropagation();const transitionNext=changeType.includes("next"),willTransition=changeType.includes("previous")||transitionNext;payload={...payload,...willTransition&&{...isNext&&{nestedPathIds:[...state.nestedPathIds,item.value]},transitionType:changeType,isTransitionNext:isNext,isTransitionPrevious:isPrevious}},dispatch({type:changeType,payload}),onChange({type:changeType,...changes})}}),[getSelectedItems,isExpandedControlled,isSelectedItemsControlled,returnFocusToTrigger,environment,rtl,getNextFocusedValue,isFocusedValueControlled,state.nestedPathIds,onChange]),handleItemMouseEnter=(0,react.useCallback)((value=>{const changeType=StateChangeTypes.MenuItemMouseMove;dispatch({type:changeType,payload:{...!isFocusedValueControlled&&{focusedValue:value}}}),onChange({type:changeType,focusedValue:value})}),[isFocusedValueControlled,onChange]);(0,react.useEffect)((()=>{setMenuVisible(controlledIsExpanded)}),[controlledIsExpanded]),(0,react.useEffect)((()=>{const win=environment||window;return controlledIsExpanded?(win.document.addEventListener("click",handleMenuBlur,!0),win.document.addEventListener("keydown",handleMenuKeyDown,!0)):controlledIsExpanded||(win.document.removeEventListener("click",handleMenuBlur,!0),win.document.removeEventListener("keydown",handleMenuKeyDown,!0)),()=>{win.document.removeEventListener("click",handleMenuBlur,!0),win.document.removeEventListener("keydown",handleMenuKeyDown,!0)}}),[controlledIsExpanded,handleMenuBlur,handleMenuKeyDown,environment]),(0,react.useEffect)((()=>{if(state.focusOnOpen&&menuVisible&&controlledFocusedValue&&controlledIsExpanded){let ref=itemRefs[controlledFocusedValue]?.current;ref||(ref=itemRefs[values[0]].current),ref&&ref.focus()}}),[values,menuVisible,itemRefs,controlledFocusedValue,state.focusOnOpen,controlledIsExpanded,triggerRef]),(0,react.useEffect)((()=>{const valuesChanged=JSON.stringify(values)!==JSON.stringify(state.valuesRef);if(!valuesChanged||state.isTransitionNext||state.isTransitionPrevious||dispatch({type:StateChangeTypes.FnSetStateRefs,payload:{valuesRef:values}}),valuesChanged&&(state.isTransitionNext||state.isTransitionPrevious)){const nextFocusedValue=state.isTransitionNext?values[0]:state.nestedPathIds.slice(-1)[0];dispatch({type:StateChangeTypes.FnMenuTransitionFinish,payload:{valuesRef:values,focusOnOpen:!0,nestedPathIds:state.isTransitionNext?state.nestedPathIds:state.nestedPathIds.slice(0,-1),...!isFocusedValueControlled&&{focusedValue:nextFocusedValue}}}),onChange({type:StateChangeTypes.FnMenuTransitionFinish,focusedValue:nextFocusedValue})}}),[values,isFocusedValueControlled,state.valuesRef,state.transitionType,state.isTransitionNext,state.isTransitionPrevious,state.nestedPathIds,onChange]);const getTriggerProps=(0,react.useCallback)((function(_temp){let{onClick,onKeyDown,type="button",role="button",disabled,...other}=void 0===_temp?{}:_temp;return{...other,"data-garden-container-id":"containers.menu.trigger","data-garden-container-version":"storybook",ref:triggerRef,id:triggerId,"aria-expanded":controlledIsExpanded,"aria-haspopup":!0,disabled,tabIndex:disabled?-1:0,type:null===type?void 0:type,role:null===role?void 0:role,onKeyDown:(0,composeEventHandlers.m)(onKeyDown,handleTriggerKeyDown),onClick:(0,composeEventHandlers.m)(onClick,handleTriggerClick)}}),[triggerRef,controlledIsExpanded,handleTriggerClick,handleTriggerKeyDown,triggerId]),getMenuProps=(0,react.useCallback)((function(_temp2){let{role="menu",onMouseLeave,...other}=void 0===_temp2?{}:_temp2;return{...other,...getGroupProps({onMouseLeave:(0,composeEventHandlers.m)(onMouseLeave,handleMenuMouseLeave)}),"data-garden-container-id":"containers.menu","data-garden-container-version":"storybook","aria-labelledby":triggerId,tabIndex:-1,role:null===role?void 0:role,ref:menuRef}}),[triggerId,menuRef,getGroupProps,handleMenuMouseLeave]),getSeparatorProps=(0,react.useCallback)((function(_temp3){let{role="separator",...other}=void 0===_temp3?{}:_temp3;return{...other,"data-garden-container-id":"containers.menu.separator","data-garden-container-version":"storybook",role:null===role?void 0:role}}),[]),getItemGroupProps=(0,react.useCallback)((_ref5=>{let{role="group",...other}=_ref5;return{...other,"data-garden-container-id":"containers.menu.item_group","data-garden-container-version":"storybook",role:null===role?void 0:role}}),[]),getItemProps=(0,react.useCallback)((_ref6=>{let{role="menuitem",onClick,onKeyDown,onMouseEnter,item,...other}=_ref6;const{disabled:itemDisabled,type,name,value,href,isExternal,isNext=!1,isPrevious=!1,label=value}=item;let itemRole=role;"radio"===type?itemRole="menuitemradio":"checkbox"===type&&(itemRole="menuitemcheckbox");const selected=isItemSelected(value,type,name),elementProps={"data-garden-container-id":"containers.menu.item","data-garden-container-version":"storybook","aria-selected":void 0,"aria-checked":selected,"aria-disabled":itemDisabled,role:null===itemRole?void 0:itemRole,href,onClick,onKeyDown,onMouseEnter,...other};if(href&&isExternal&&(elementProps.target="_blank",elementProps.rel="noopener noreferrer"),href&&(isNext||isPrevious||type)&&(_ref4=>{let invariantKey,{isNext,isPrevious,type,value}=_ref4;throw invariantKey=isNext?"isNext":isPrevious?"isPrevious":type,new Error(`Error: expected useMenu anchor item '${value}' to not use '${{isNext:"isNext",isPrevious:"isPrevious",radio:"radio",checkbox:"checkbox"}[invariantKey]}'`)})(item),itemDisabled)return elementProps;const itemProps=getElementProps({value,...elementProps,onClick:(0,composeEventHandlers.m)(onClick,(()=>handleItemClick({...item,label,selected,isNext,isPrevious}))),onKeyDown:(0,composeEventHandlers.m)(onKeyDown,(e=>handleItemKeyDown(e,{...item,label,selected,isNext,isPrevious}))),onMouseEnter:(0,composeEventHandlers.m)(onMouseEnter,(()=>handleItemMouseEnter(value)))});return itemProps.ref!==itemRefs[value]&&(itemRefs[value]=itemProps.ref),itemProps}),[itemRefs,isItemSelected,getElementProps,handleItemClick,handleItemKeyDown,handleItemMouseEnter]);return(0,react.useMemo)((()=>({getTriggerProps,getMenuProps,getItemGroupProps,getItemProps,getSeparatorProps,isExpanded:controlledIsExpanded,selection:controlledSelectedItems,focusedValue:controlledFocusedValue})),[controlledIsExpanded,controlledSelectedItems,controlledFocusedValue,getTriggerProps,getMenuProps,getItemGroupProps,getItemProps,getSeparatorProps])}},"./packages/selection/src/useSelection.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>useSelection});var react=__webpack_require__("./node_modules/react/index.js"),getControlledValue=__webpack_require__("./packages/utilities/src/utils/getControlledValue.ts"),KeyboardEventValues=__webpack_require__("./packages/utilities/src/utils/KeyboardEventValues.ts"),composeEventHandlers=__webpack_require__("./packages/utilities/src/utils/composeEventHandlers.ts");const stateReducer=(state,action)=>{switch(action.type){case"END":case"HOME":case"FOCUS":case"INCREMENT":case"DECREMENT":return{...state,focusedValue:action.payload};case"MOUSE_SELECT":return{...state,selectedValue:action.payload,focusedValue:void 0};case"KEYBOARD_SELECT":return{...state,selectedValue:action.payload};case"EXIT_WIDGET":return{...state,focusedValue:void 0};default:return state}},useSelection=_ref=>{let{values,direction="horizontal",defaultFocusedValue=values[0],defaultSelectedValue,rtl,selectedValue,focusedValue,allowDefaultOnSelect=!1,onSelect,onFocus}=_ref;const isSelectedValueControlled=void 0!==selectedValue,isFocusedValueControlled=void 0!==focusedValue,refs=(0,react.useMemo)((()=>values.reduce(((all,value)=>(all[value]=(0,react.createRef)(),all)),{})),[values]),[state,dispatch]=(0,react.useReducer)(stateReducer,{selectedValue,focusedValue}),controlledFocusedValue=(0,getControlledValue.o)(focusedValue,state.focusedValue),controlledSelectedValue=(0,getControlledValue.o)(selectedValue,state.selectedValue);(0,react.useEffect)((()=>{if(void 0!==controlledFocusedValue){const targetRef=refs[controlledFocusedValue];targetRef?.current&&targetRef.current.focus()}}),[controlledFocusedValue]),(0,react.useEffect)((()=>{void 0===selectedValue&&void 0!==defaultSelectedValue&&(onSelect&&onSelect(defaultSelectedValue),isSelectedValueControlled||dispatch({type:"KEYBOARD_SELECT",payload:defaultSelectedValue}))}),[]);const getGroupProps=(0,react.useCallback)((function(_temp){let{role="group",...other}=void 0===_temp?{}:_temp;return{role:null===role?void 0:role,"data-garden-container-id":"containers.selection","data-garden-container-version":"storybook",...other}}),[]);return{focusedValue:controlledFocusedValue,selectedValue:controlledSelectedValue,getElementProps:_ref2=>{let{selectedAriaKey="aria-selected",onFocus:onFocusCallback,onKeyDown,onClick,value,...other}=_ref2;const isSelected=controlledSelectedValue===value,verticalDirection="vertical"===direction||"both"===direction,horizontalDirection="horizontal"===direction||"both"===direction;return{tabIndex:(void 0===controlledFocusedValue?isSelected:controlledFocusedValue===value)||void 0===controlledSelectedValue&&void 0===controlledFocusedValue&&value===defaultFocusedValue?0:-1,[selectedAriaKey]:selectedAriaKey?isSelected:void 0,ref:refs[value],onFocus:(0,composeEventHandlers.m)(onFocusCallback,(()=>{onFocus&&onFocus(value),!isFocusedValueControlled&&dispatch({type:"FOCUS",payload:value})})),onClick:(0,composeEventHandlers.m)(onClick,(()=>{onSelect&&onSelect(value),onFocus&&onFocus(value),!isSelectedValueControlled&&dispatch({type:"MOUSE_SELECT",payload:value})})),onKeyDown:(0,composeEventHandlers.m)(onKeyDown,(event=>{let nextItem,currentItem;currentItem=isFocusedValueControlled?values.find((id=>focusedValue===id)):values.find((id=>state.focusedValue===id));const onIncrement=()=>{const nextItemIndex=values.indexOf(currentItem)+1;nextItem=values[nextItemIndex],nextItem||(nextItem=values[0]),!isFocusedValueControlled&&dispatch({type:"INCREMENT",payload:nextItem}),onFocus&&onFocus(nextItem)},onDecrement=()=>{const nextItemIndex=values.indexOf(currentItem)-1;nextItem=values[nextItemIndex],nextItem||(nextItem=values[values.length-1]),!isFocusedValueControlled&&dispatch({type:"DECREMENT",payload:nextItem}),onFocus&&onFocus(nextItem)};if(!(event.ctrlKey||event.metaKey||event.shiftKey||event.altKey))if(event.key===KeyboardEventValues.R.UP&&verticalDirection||event.key===KeyboardEventValues.R.LEFT&&horizontalDirection)rtl&&horizontalDirection?onIncrement():onDecrement(),event.preventDefault();else if(event.key===KeyboardEventValues.R.DOWN&&verticalDirection||event.key===KeyboardEventValues.R.RIGHT&&horizontalDirection)rtl&&horizontalDirection?onDecrement():onIncrement(),event.preventDefault();else if(event.key===KeyboardEventValues.R.HOME){const firstItem=values[0];!isFocusedValueControlled&&dispatch({type:"HOME",payload:firstItem}),onFocus&&onFocus(firstItem),event.preventDefault()}else if(event.key===KeyboardEventValues.R.END){const lastItem=values[values.length-1];!isFocusedValueControlled&&dispatch({type:"END",payload:lastItem}),onFocus&&onFocus(lastItem),event.preventDefault()}else event.key!==KeyboardEventValues.R.SPACE&&event.key!==KeyboardEventValues.R.ENTER||(onSelect&&onSelect(value),!isSelectedValueControlled&&dispatch({type:"KEYBOARD_SELECT",payload:value}),!allowDefaultOnSelect&&event.preventDefault())})),onBlur:event=>{0===event.target.tabIndex&&(dispatch({type:"EXIT_WIDGET"}),onFocus&&onFocus())},...other}},getGroupProps}}},"./packages/utilities/src/utils/KeyboardEventValues.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>KEYS});const KEYS={ALT:"Alt",ASTERISK:"*",BACKSPACE:"Backspace",COMMA:",",DELETE:"Delete",DOWN:"ArrowDown",END:"End",ENTER:"Enter",ESCAPE:"Escape",HOME:"Home",LEFT:"ArrowLeft",NUMPAD_ADD:"Add",NUMPAD_DECIMAL:"Decimal",NUMPAD_DIVIDE:"Divide",NUMPAD_ENTER:"Enter",NUMPAD_MULTIPLY:"Multiply",NUMPAD_SUBTRACT:"Subtract",PAGE_DOWN:"PageDown",PAGE_UP:"PageUp",PERIOD:".",RIGHT:"ArrowRight",SHIFT:"Shift",SPACE:" ",TAB:"Tab",UNIDENTIFIED:"Unidentified",UP:"ArrowUp"}},"./packages/utilities/src/utils/composeEventHandlers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function composeEventHandlers(){for(var _len=arguments.length,fns=new Array(_len),_key=0;_key<_len;_key++)fns[_key]=arguments[_key];return function(event){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];return fns.some((fn=>(fn&&fn(event,...args),event&&event.defaultPrevented)))}}__webpack_require__.d(__webpack_exports__,{m:()=>composeEventHandlers})},"./packages/utilities/src/utils/getControlledValue.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function getControlledValue(){for(var _len=arguments.length,values=new Array(_len),_key=0;_key<_len;_key++)values[_key]=arguments[_key];for(const value of values)if(void 0!==value)return value}__webpack_require__.d(__webpack_exports__,{o:()=>getControlledValue})},"./packages/utilities/src/utils/useId.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>useId});var _reach_auto_id__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@reach/auto-id/dist/reach-auto-id.mjs");let idCounter=0;const useId=id=>(0,_reach_auto_id__WEBPACK_IMPORTED_MODULE_0__.B)(id)||"id:"+idCounter++}}]);